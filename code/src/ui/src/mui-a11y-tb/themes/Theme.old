/* Typography */
/* Headers */
h1 {
  font-family:  var(--h1FontFamily);
  font-weight: var(--h1FontWeight);
  font-size: var(--h1FontSize);
  line-height: var(--h1LineHeight) !important;
  letter-spacing: var(--h1LetterSpacing) !important;
  text-transform: var(--h1TextTransform) !important;
  text-decoration: var(--h1TextDecoration) !important;
  margin: .5em 0;
}
h1.display1 {
  font-family:  var(--Display1FontFamily);
  font-weight: var(--Display1FontWeight);
  font-size: var(--Display1FontSize);
  line-height: var(--Display1LineHeight) !important;
  letter-spacing: var(--Display1LetterSpacing) !important;
  text-transform: var(--Display1TextTransform) !important;
  text-decoration: var(--Display1TextDecoration) !important;
  margin: .5em 0;
}
h1.display2 {
  font-family:  var(--Display2FontFamily);
  font-weight: var(--Display2FontWeight);
  font-size: var(--Display2FontSize);
  line-height: var(--Display2LineHeight) !important;
  letter-spacing: var(--Display2LetterSpacing) !important;
  text-transform: var(--Display2TextTransform) !important;
  text-decoration: var(--Display2TextDecoration) !important;
  margin: .5em 0;
}
h2 {
  font-family:  var(--h2FontFamily);
  font-weight: var(--h2FontWeight);
  font-size: var(--h2FontSize);
  line-height: var(--h2LineHeight) !important;
  letter-spacing: var(--h2LetterSpacing) !important;
  text-transform: var(--h2TextTransform) !important;
  text-decoration: var(--h2TextDecoration) !important;
  margin: .5em 0;
}
h3 {
  font-family:  var(--h3FontFamily);
  font-weight: var(--h3FontWeight);
  font-size: var(--h3FontSize);
  line-height: var(--h3LineHeight) !important;
  letter-spacing: var(--h3LetterSpacing) !important;
  text-transform: var(--h3TextTransform) !important;
  text-decoration:  var(--h3TextDecoration) !important;
  margin: .5em 0;
}
h4 {
  font-family:  var(--h4FontFamily);
  font-weight: var(--h4FontWeight);
  font-size: var(--h4FontSize);
  line-height: var(--h4LineHeight) !important;
  letter-spacing: var(--h4LetterSpacing) !important;
  text-transform: var(--h4TextTransform) !important;
  text-decoration:  var(--h4TextDecoration) !important;
  margin: .5em 0;
}
h5 {
  font-family:  var(--h5FontFamily);
  font-weight: var(--h5FontWeight);
  font-size: var(--h5FontSize);
  line-height: var(--h5LineHeight) !important;
  letter-spacing: var(--h5LetterSpacing) !important;
  text-transform: var(--h5TextTransform) !important;
  text-decoration:  var(--h5TextDecoration) !important;
  margin: .5em 0;
}
h6 {
  font-family:  var(--h6FontFamily);
  font-weight: var(--h6FontWeight);
  font-size: var(--h6FontSize);
  line-height: var(--h6LineHeight) !important;
  letter-spacing: var(--h6LetterSpacing) !important;
  text-transform: var(--h6TextTransform) !important;
  text-decoration:  var(--h6TextDecoration) !important;
  margin: .5em 0;
}
/* Body */
.styling {
  list-style: none;
  padding: 0;
}
.body1 {
  font-family:  var(--body1FontFamily);
  font-weight: var(--body1FontWeight) !important;
  font-size: var(--body1FontSize) !important;
  line-height: var(--body1LineHeight) !important;
  letter-spacing: var(--body1LetterSpacing) !important;
  text-transform: var(--body1TextTransform) !important;
  text-decoration:  var(--body1TextDecoration) !important;
}
.body1-bold {
  font-family:  var(--body1-boldFontFamily);
  font-weight: var(--body1-boldFontWeight) !important;
  font-size: var(--body1-boldFontSize) !important;
  line-height: var(--body1-boldLineHeight) !important;
  letter-spacing: var(--body1-boldLetterSpacing) !important;
  text-transform: var(--body1-boldTextTransform) !important;
  text-decoration:  var(--body1-boldTextDecoration) !important;
}
.body2 {
  font-family:  var(--body2FontFamily);
  font-weight: var(--body2FontWeight) !important;
  font-size: var(--body2FontSize) !important;
  line-height: var(--body2LineHeight) !important;
  letter-spacing: var(--body2LetterSpacing) !important;
  text-transform: var(--body2TextTransform) !important;
  text-decoration:  var(--body2TextDecoration) !important;
}
.body2-bold {
  font-family:  var(--body2-boldFontFamily);
  font-weight: var(--body2-boldFontWeight) !important;
  font-size: var(--body2-boldFontSize) !important;
  line-height: var(--body2-boldLineHeight) !important;
  letter-spacing: var(--body2-boldLetterSpacing) !important;
  text-transform: var(--body2-boldTextTransform) !important;
  text-decoration: var(--body1-boldTextDecoration) !important;
}
.body3 {
  font-family:  var(--body3FontFamily);
  font-weight: var(--body3FontWeight) !important;
  font-size: var(--body3FontSize) !important;
  line-height: var(--body3LineHeight) !important;
  letter-spacing: var(--body3LetterSpacing) !important;
  text-transform: var(--body3TextTransform) !important;
  text-decoration: var(--body3TextDecoration) !important;
}
.body3-bold {
  font-family:  var(--body3-boldFontFamily);
  font-weight: var(--body3-boldFontWeight) !important;
  font-size: var(--body3-boldFontSize) !important;
  line-height: var(--body3-boldLineHeight) !important;
  letter-spacing: var(--body3-boldLetterSpacing) !important;
  text-transform: var(--body3-boldTextTransform) !important;
  text-decoration:  var(--body3-boldTextDecoration) !important;
}
/* Small Text */
.subtitle1 {
  font-family:  var(--subtitle1FontFamily);
  font-weight: var(--subtitle1FontWeight) !important;
  font-size: var(--subtitle1FontSize) !important;
  line-height: var(--subtitle1LineHeight) !important;
  letter-spacing: var(--subtitle1LetterSpacing) !important;
  text-transform: var(--subtitle1TextTransform) !important;
  text-decoration:  var(--subtitle1TextDecoration) !important;
}
.subtitle2 {
  font-family:  var(--subtitle2FontFamily);
  font-weight: var(--subtitle2FontWeight) !important;
  font-size: var(--subtitle2FontSize) !important;
  line-height: var(--subtitle2LineHeight) !important;
  letter-spacing: var(--subtitle2LetterSpacing) !important;
  text-transform: var(--subtitle2TextTransform) !important;
  text-decoration:  var(--subtitle2TextDecoration) !important;
}
.CTA {
  font-family:  var(--CTAFontFamily);
  font-weight: var(--CTAFontWeight) !important;
  font-size: var(--CTAFontSize) !important;
  line-height: var(--CTALineHeight) !important;
  letter-spacing: var(--CTALetterSpacing) !important;
  text-transform: var(--CTATextTransform) !important;
  text-decoration:  var(--CTATextDecoration) !important;
}
.CTA-Small {
  font-family:  var(--CTA-SmallFontFamily);
  font-weight: var(--CTA-SmallFontWeight) !important;
  font-size: var(--CTA-SmallFontSize) !important;
  line-height: var(--CTA-SmallLineHeight) !important;
  letter-spacing: var(--CTA-SmallLetterSpacing) !important;
  text-transform: var(--CTA-SmallTextTransform) !important;
  text-decoration:  var(--CTA-SmallTextDecoration) !important;
}
.caption {
  font-family:  var(--captionFontFamily);
  font-weight: var(--captionFontWeight) !important;
  font-size: var(--captionFontSize) !important;
  line-height: var(--captionLineHeight) !important;
  letter-spacing: var(--captionLetterSpacing) !important;
  text-transform: var(--captionTextTransform) !important;
  text-decoration:  var(--captionTextDecoration) !important;
}
.caption-bold {
  font-family:  var(--caption-boldFontFamily);
  font-weight: var(--caption-boldFontWeight) !important;
  font-size: var(--caption-boldFontSize) !important;
  line-height: var(--caption-boldLineHeight) !important;
  letter-spacing: var(--caption-boldLetterSpacing) !important;
  text-transform: var(--caption-boldTextTransform) !important;
  text-decoration:  var(--caption-boldTextDecoration) !important;
}
.overline {
  font-family:  var(--overlineFontFamily);
  font-weight: var(--overlineFontWeight) !important;
  font-size: var(--overlineFontSize) !important;
  line-height: var(--overlineLineHeight) !important;
  letter-spacing: var(--overlineLetterSpacing) !important;
  text-transform: var(--overlineTextTransform) !important;
  text-decoration:  var(--overlineTextDecoration) !important;
}
.overline-large {
  font-family:  var(--overline-largeFontFamily);
  font-weight: var(--overline-largeFontWeight) !important;
  font-size: var(--overline-largeFontSize) !important;
  line-height: var(--overline-largeLineHeight) !important;
  letter-spacing: var(--overline-largeLetterSpacing) !important;
  text-transform: var(--overline-largeTextTransform) !important;
  text-decoration:  var(--overline-largeTextDecoration) !important;
}
.overline-XL {
  font-family:  var(--overline-XLFontFamily);
  font-weight: var(--overline-XLFontWeight) !important;
  font-size: var(--overline-XLFontSize) !important;
  line-height: var(--overline-XLLineHeight) !important;
  letter-spacing: var(--overline-XLLetterSpacing) !important;
  text-transform: var(--overline-XLTextTransform) !important;
  text-decoration:  var(--overline-XLTextDecoration) !important;
}
.small {
  font-family:  var(--smallFontFamily);
  font-weight: var(--smallFontWeight) !important;
  font-size: var(--smallFontSize) !important;
  line-height: var(--smallLineHeight) !important;
  letter-spacing: var(--smallLetterSpacing) !important;
  text-transform: var(--smallTextTransform) !important;
  text-decoration:  var(--smallTextDecoration) !important;
}
.small-semibold {
  font-family:  var(--small-semiboldFontFamily);
  font-weight: var(--small-semiboldFontWeight) !important;
  font-size: var(--small-semiboldFontSize) !important;
  line-height: var(--small-semiboldLineHeight) !important;
  letter-spacing: var(--small-semiboldLetterSpacing) !important;
  text-transform: var(--small-semiboldTextTransform) !important;
  text-decoration:  var(--small-semiboldTextDecoration) !important;
}
.label-1  {
  font-family:  var(--label-1FontFamily);
  font-weight: var(--label-1FontWeight) !important;
  font-size: var(--label-1FontSize) !important;
  line-height: var(--label-1LineHeight) !important;
  letter-spacing: var(--label-1LetterSpacing) !important;
  text-transform: var(--label-1TextTransform) !important;
  text-decoration:  var(--label-1TextDecoration) !important;
}
.label-1-allCaps  {
  font-family:  var(--label-1-allCapsFontFamily);
  font-weight: var(--label-1-allCapsFontWeight) !important;
  font-size: var(--label-1-allCapsFontSize) !important;
  line-height: var(--label-1-allCapsLineHeight) !important;
  letter-spacing: var(--label-1-allCapsLetterSpacing) !important;
  text-transform: var(--label-1-allCapsTextTransform) !important;
  text-decoration:  var(--label-1-allCapsTextDecoration) !important;
}
.label-2 {
  font-family:  var(--label-2FontFamily);
  font-weight: var(--label-2FontWeight) !important;
  font-size: var(--label-2FontSize) !important;
  line-height: var(--label-2LineHeight) !important;
  letter-spacing: var(--label-2LetterSpacing) !important;
  text-transform: var(--label-2TextTransform) !important;
  text-decoration:  var(--label-2TextDecoration) !important;
}
.label-2-allCaps {
  font-family:  var(--label-2-allCapsFontFamily);
  font-weight: var(--label-2-allCapsFontWeight) !important;
  font-size: var(--label-2-allCapsFontSize) !important;
  line-height: var(--label-2-allCapsLineHeight) !important;
  letter-spacing: var(--label-2-allCapsLetterSpacing) !important;
  text-transform: var(--label-2-allCapsTextTransform) !important;
  text-decoration:  var(--label-2-allCapsTextDecoration) !important;
}
.label-small {
  font-family:  var(--label-smallFontFamily);
  font-weight: var(--label-smallFontWeight) !important;
  font-size: var(--label-smallFontSize) !important;
  line-height: var(--label-smallLineHeight) !important;
  letter-spacing: var(--label-smallLetterSpacing) !important;
  text-transform: var(--label-smallTextTransform) !important;
  text-decoration:  var(--label-smallTextDecoration) !important;
}
.stat {
  font-family:  var(--statFontFamily);
  font-weight: var(--statFontWeight) !important;
  font-size: var(--statontSize) !important;
  line-height: var(--statineHeight) !important;
  letter-spacing: var(--statLetterSpacing) !important;
  text-transform: var(--statTextTransform) !important;
  text-decoration:  var(--statTextDecoration) !important;
}
/* spacing */
p {
  padding-bottom: calc(var(--p-padding) * var(--baseFont));
}
section {
  padding: calc(var(--section-padding) * var(--baseFont));
}

/* opacity */
.quiet {
  opacity: var(--quiet);
}
.disabled {
  opacity: var(--disabled);
}

/* THEME */
.theme-primary {
  background: var(--primary);
  color: var(--on-primary);
}
.theme-secondaty {
  background: var(--secondary);
  color: var(--on-secondary);
}
.theme-tertiary {
  background: var(--tertiary);
  color: var(--on-tertiary);
}
.background {
  background: var(--background);
  color: var(--on-background);
}
.background-secondary {
  background: var(--background-secondary);
  color: var(--on-background-secondary);
}
.button {
  background: var(--button);
  color: var(--on-button);
}
.icon {
  background: var(--icon);
  color: var(--on-icon);
}
.accent {
  background: var(--accent);
  color: var(--on-accent);
}
/* theme text decoraiton */
.drop-color {
  text-shadow: 4px 4px 0px var(--color-drop);
}
.gradient-title {
  background: var(--text-gradient);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

/* darkmode theme */
.darkmode .theme-primary {
  background: var(--dm-primary);
  color: var(--dm-on-primary);
}
.darkmode .theme-secondary {
  background: var(--dm-secondary);
  color: var(--dm-on-secondary);
}
.darkmode .theme-tertiary {
  background: var(--dm-tertiary);
  color: var(--dm-on-tertiary);
}
.darkmode .background {
  background: var(--dm-background);
  color: var(--dm-on-background);
}
.darkmode .background-secondary {
  background: var(--dm-background-secondary);
  color: var(--dm-on-background-secondary);
}
.darkmode .button {
  background: var(--dm-button);
  color: var(--dm-on-button);
}
.darkmode .icon {
  background: var(--dm-icon);
  color: var(--dm-on-icon);
}
.darkmode .accent {
  background: var(--dm-accent);
  color: var(--dm-on-accent);
}
.darkmode .drop-color {
  text-shadow: 4px 4px 0px var(--dm-color-drop);
}
.darkmode .gradient-title {
  background: var(--dm-text-gradient);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}
/* MOLECULES */

/* avatars */
.avatars {
    display: flex;
    justify-content: start;
    gap: var(--spacing-3);
    align-items: center;
}

.avatar {
    border-radius: 100%;
    /* background: rgba(0,0,0,.2) url('../img/avatar.svg') center center; */
    background-size: 100%;
    flex: none;
    box-shadow: var(--avatar-shadow);
}
.avatar .darkmode {
    background-size: 100%;
}
.avatar.xxs {
    width: var(--spacing-3);
    height: var(--spacing-3);
}
.avatar.xs {
    width: var(--spacing-4);
    height: var(--spacing-4);
}
.avatar.sm {
    width: var(--min-target);
    height: var(--min-target);
}
.avatar.md {
    width: var(--spacing-7);
    height: var(--spacing-7);
}
.darkmode .MuiAvatar-root.xxs,
.darkmode .MuiAvatar-root.xs,
.darkmode .MuiAvatar-root.sm,
.darkmode .MuiAvatar-root.md {
  background: var(--dm-button) !important;
  border: solid calc(var(--border-1) * var(--avatar-border)) var(--dm-button) !important;
  /* background-size: 100%; */
}
.darkmode .MuiAvatar-root.xxs svg path,
.darkmode .MuiAvatar-root.xs svg path,
.darkmode .MuiAvatar-root.sm svg path,
.darkmode .MuiAvatar-root.md svg path {
  fill: var(--dm-on-button)
  /* background-size: 100%; */
}
.darkmode .black.MuiAvatar-root.xxs,
.darkmode .black.MuiAvatar-root.xs,
.darkmode .black.MuiAvatar-root.sm,
.darkmode .black.MuiAvatar-root.md {
  background: var(--black) !important;
  border: solid calc(var(--border-1) * var(--avatar-border)) var(--black) !important;
  /* background-size: 100%; */
}
.darkmode .black.MuiAvatar-root.xxs svg path,
.darkmode .black.MuiAvatar-root.xs svg path,
.darkmode .black.MuiAvatar-root.sm svg path,
.darkmode .black.MuiAvatar-root.md svg path {
  fill: var(--dm-white)
  /* background-size: 100%; */
}
.darkmode .white.MuiAvatar-root.xxs,
.darkmode .white.MuiAvatar-root.xs,
.darkmode .white.MuiAvatar-root.sm,
.darkmode .white.MuiAvatar-root.md {
    border: solid calc(var(--border-1) * var(--avatar-border)) var(--dm-white) !important;
    background: var(--dm-white) !important;
}
.darkmode .white.MuiAvatar-root.xxs svg path,
.darkmode .white.MuiAvatar-root.xs svg path,
.darkmode .white.MuiAvatar-root.sm svg path,
.darkmode .white.MuiAvatar-root.md svg path {
   fill: var(--black)
}
.avatar.lg {
    width: var(--spacing-10);
    height: var(--spacing-10);
}
.avatar.xl {
    width: calc(var(--spacing-10) * 2);
    height: calc(var(--spacing-10) * 2);
}

.avatar.xxl {
    width: calc(var(--spacing-10) * 2.6);
    height: calc(var(--spacing-10) * 2.6);
}
.darkmode .MuiAvatar-root.lg,
.darkmode .MuiAvatar-root.xl,
.darkmode .MuiAvatar-root.xxl {
    background: var(--dm-button) !important;
    border: solid calc(var(--border-1) * var(--avatar-border-lg)) var(--dm-button) !important;
}
.darkmode .MuiAvatar-root.lg svg path,
.darkmode .MuiAvatar-root.xl svg path,
.darkmode .MuiAvatar-root.xxl svg path {
    fill: var(--dm-on-button) !important;
}
.darkmode .black.MuiAvatar-root.lg,
.darkmode .black.MuiAvatar-root.xl,
.darkmode .black.MuiAvatar-root.xxl {
    background: var(--black) !important;
    border: solid calc(var(--border-1) * var(--avatar-border-lg)) var(--black) !important;
}
.darkmode .black.MuiAvatar-root.lg svg path,
.darkmode .black.MuiAvatar-root.xl svg path,
.darkmode .black.MuiAvatar-root.xxl svg path {
    fill: var(--dm-white) !important;
}
.darkmode .white.MuiAvatar-root.lg,
.darkmode .white.MuiAvatar-root.xl,
.darkmode .white.MuiAvatar-root.xxl {
    border: solid calc(var(--border-1) * var(--avatar-border-lg)) var(--dm-white) !important;
    background: var(--dm-white) !important;
}
.darkmode .white.MuiAvatar-root.lg svg path,
.darkmode .white.MuiAvatar-root.xl svg path,
.darkmode .white.MuiAvatar-root.xxl svg path {
    fill: var(--black);
}
.avatar.centered {
    margin: auto !important
}
.darkmode .MuiAvatar-root {
  background-color: var(--dm-button)
}
.darkmode .MuiAvatar-root svg path {
    fill: var(--dm-white);
}
/* Breadcrumbs  */
.breadcrumbs .MuiBreadcrumbs-li {
    gap: var(--spacing-1);
    background: transparent !important;
}

.white.MuiBreadcrumbs-ol, .black.MuiBreadcrumbs-ol, .colored.MuiBreadcrumbs-ol {
  background: transparent !important;
}

.breadcrumbs .MuiBreadcrumbs-li .MuiTypography-root {
  font-family: var(--caption-boldFontFamily) !important;
  font-weight: var(--caption-boldFontWeight) !important;
  font-size: var(--caption-boldFontSize) !important;
  line-height: var(--caption-boldLineHeight) !important;
  letter-spacing: var(--caption-boldLetterSpacing) !important;
  text-transform: var(--caption-boldTextTransform) !important;
  text-decoration:  var(--caption-boldTextDecoration) !important;
}

.breadcrumbs .MuiBreadcrumbs-li a .fa-solid, .breadcrumbs .MuiBreadcrumbs-li a .fa-default {
  margin-right: var(--spacing-1);
}

.breadcrumbs .MuiBreadcrumbs-li a, .breadcrumbs .MuiBreadcrumbs-li:focus a, .breadcrumbs .MuiBreadcrumbs-li:active a {
    color: var(--hotlink);
    text-decoration: var(--hotlink-decoration);
    text-decoration-color: var(--hotlink);
}
.breadcrumb .MuiBreadcrumbs-separator {
  color: var(--on-background);
  opacity: var(--quiet);
}
.breadcrumbs .MuiBreadcrumbs-li:hover a{
    text-decoration: var(--hotlink-hover-decoration);
    text-decoration-color: var(--hotlink);
}
.breadcrumbs .MuiBreadcrumbs-li:visited a{
  color: var(--hotlink);
  text-decoration: var(--hotlink-decoration);
  text-decoration-color: var(--hotlink);
  opacity: .7
}
.breadcrumbs.white .MuiBreadcrumbs-li a, .breadcrumbs.white .MuiBreadcrumbs-li:focus a, .breadcrumbs.white .MuiBreadcrumbs-li:active a{
  color: var(--white) !important;
  text-decoration: underline !important;
  background: transparent !important;
  text-decoration-color: var(--white);
}
.breadcrumbs.white .MuiBreadcrumbs-separator {
  color: var(--white) !important;
}

.black.breadcrumbs  .MuiBreadcrumbs-li a {
  color: var(--black) !important;
  text-decoration-color: var(--black);
  text-decoration: underline !important;
  background: transparent !important;
}
.breadcrumbs.black .MuiBreadcrumbs-separator {
  color: var(--black) !important;
}
.white.breadcrumbs .MuiBreadcrumbs-li:hover a, .black.breadcrumbs .MuiBreadcrumbs-li:hover a {
  text-decoration: none !important;
}
.white.breadcrumbs:visited, .black.breadcrumbs:visited a{
  text-decoration: underline !important;
  opacity: .7
}
.breadcrumbs:not(.back-breadcrumbs) .MuiBreadcrumbs-li:last-of-type .MuiTypography-root{
  text-decoration: none !important;
  font-style: italic !important;
  font-size: var(--caption-boldFontSize) !important;
  font-family: var(--caption-boldFontFamily) !important;
  font-weight: var(--caption-boldFontWeight) !important;
  font-size: var(--caption-boldFontSize) !important;
  line-height: var(--caption-boldLineHeight) !important;
  letter-spacing: var(--caption-boldLetterSpacing) !important;
  padding: 0 !important;
  margin-top: 2px;
}
.breadcrumbs:not(.back-breadcrumbs).black .MuiBreadcrumbs-li:last-of-type .MuiTypography-root{
  color: var(--black) !important;
}
.breadcrumbs:not(.back-breadcrumbs).white .MuiBreadcrumbs-li:last-of-type .MuiTypography-root{
  color: var(--white) !important;
}
/* dark mode bread crumbs */
.darkmode .breadcrumbs .MuiBreadcrumbs-li a, .darkmode .breadcrumbs .MuiBreadcrumbs-li:focus a, .darkmode .breadcrumbs .MuiBreadcrumbs-li:active a {
    color: var(--dm-hotlink) !important;
    text-decoration: var(--dm-hotlink-decoration);
    text-decoration-color: var(--dm-hotlink);
}
.darkmode .breadcrumb .MuiBreadcrumbs-separator {
  color: var(--dm-on-background);
  opacity: var(--quiet);
}
.darkmode .breadcrumbs .MuiBreadcrumbs-li:hover a{
    text-decoration: var(--dm-hotlink-hover-decoration);
    text-decoration-color: var(--dm-hotlink);
}
.darkmode .breadcrumbs .MuiBreadcrumbs-li:visited a{
  color: var(--dm-hotlink) !important;
  text-decoration: var(--dm-hotlink-decoration);
  text-decoration-color: var(--dm-hotlink);
  opacity: .7
}
.darkmode .breadcrumbs.white .MuiBreadcrumbs-li a, .breadcrumbs.white .MuiBreadcrumbs-li:focus a, .breadcrumbs.white .MuiBreadcrumbs-li:active a{
  color: var(--dm-white) !important;
  text-decoration: underline !important;
  background: transparent !important;
  text-decoration-color: var(--dm-white);
}
.darkmode .breadcrumbs.white .MuiBreadcrumbs-separator {
  color: var(--dm-white) !important;
}

.darkmode .breadcrumbs:not(.back-breadcrumb).white .MuiBreadcrumbs-li:last-of-type .MuiTypography-root{
  color: var(--dm-white) !important;
}
.darkmode .breadcrumbs.black .MuiBreadcrumbs-li a, .breadcrumbs.black .MuiBreadcrumbs-li:focus a, .breadcrumbs.black .MuiBreadcrumbs-li:active a{
  color: var(--black) !important;
  text-decoration: underline !important;
  background: transparent !important;
  text-decoration-color: var(--black);
}
.darkmode .breadcrumbs.black .MuiBreadcrumbs-separator {
  color: var(--black) !important;
}
.darkmode .breadcrumbs:not(.back-breadcrumb).black .MuiBreadcrumbs-li:last-of-type .MuiTypography-root{
  color: var(--black) !important;
}


/* Buttons */

button {
  flex-shrink: 0;
  display: flex;
  align-items: center;
  gap: 8px;
  justify-content: center;
  background: var(--button) !important;
  color: var(--on-button) !important;
  border-radius: calc(var(--radius-1) * var(--button-radius));
  min-height: calc(var(--spacing-1) * var(--button-height));
  min-width: calc(var(--spacing-1) * var(--button-minwidth));
  text-align: center;
  padding: 0 calc(var(--spacing-1) * var(--button-padding));
  border: none;
  position: relative;
  align-self: start;
  font: var(--buttonTypography);
  letter-spacing: var(--buttonLetterSpacing);
  text-decoration: var(--buttonTextDecoration);
  text-transform: var(--buttonTextTransform);
  box-shadow: var(--button-shadow);
  border: 0px !important;
}
button .fa-solid, button .fa-regular {
  font-size: 20px !important
}
button.wide {
  width: 100%;
}
button.icon {
  padding: 0 !important;
  min-width: calc(var(--spacing-1) * var(--button-height));
  flex: none;
}
button::after  {
  position: absolute;
  top: calc(0px - 3px - var(--animation-focus-distance));
  bottom: calc(0px - 3px - var(--animation-focus-distance));
  right: calc(0px - 3px - var(--animation-focus-distance));
  left: calc(0px - 3px - var(--animation-focus-distance));
  border: calc(var(--border-1) * var(--button-border)) solid var(--button);
  background: transparent !important;
  opacity: 0;
  content: '';
  transition: var(--animation-speed) cubic-bezier(0.68, -0.55, 0.265, 1.55) all;
  min-height: calc(var(--button-height) * var(--spacing-1) + var(--border-1) * var(--button-border) * 2px + 4px);
}
button:not(.MuiButtonGroup-grouped)::after  {
  border-radius: calc(var(--button-radius) * var(--radius-1) + 1.6px);
}
button.MuiButtonGroup-grouped:not(.MuiButtonGroup-groupedVertical):first-of-type::after  {
  border-radius: calc(var(--button-radius) * var(--radius-1) + 1.6px);
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  right: 0;
  min-height: calc(var(--button-height) * var(--spacing-1) + var(--border-1) * var(--button-border) * 2px + 4px);
}
button.MuiButtonGroup-grouped:not(.MuiButtonGroup-groupedVertical):last-of-type::after  {
  border-radius: calc(var(--button-radius) * var(--radius-1) + 1.6px);
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  left: 0;
}
button.MuiButtonGroup-grouped.MuiButtonGroup-groupedVertical:first-of-type::after  {
  border-radius: calc(var(--button-radius) * var(--radius-1) + 1.6px);
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
  bottom: 0;
  min-height: calc(var(--button-height) * var(--spacing-1) + var(--border-1) * var(--button-border) * 2px + 4px);
}
button.MuiButtonGroup-grouped.MuiButtonGroup-groupedVertical:last-of-type::after  {
  border-radius: calc(var(--button-radius) * var(--radius-1) + 1.6px);
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  top: 0;
}
button.MuiButtonGroup-grouped:not(.MuiButtonGroup-groupedVertical):not(:first-of-type):not(:last-of-type)::after  {
  left: 0 !important;
  right: 0 !important;
  min-height: calc(var(--button-height) * var(--spacing-1) + var(--border-1) * var(--button-border) * 2px + 4px);
}
button.MuiButtonGroup-grouped.MuiButtonGroup-groupedVertical:not(:first-of-type):not(:last-of-type)::after  {
  top: 0 !important;
  bottom: 0 !important;
  min-height: calc(var(--button-height) * var(--spacing-1) + var(--border-1) * var(--button-border) * 2px + 4px);
}
button:hover::after {
  opacity: .5;
  top: calc(0px - calc(calc(var(--border-1) * var(--button-border)) + 2px));
  left: calc(0px - calc(calc(var(--border-1) * var(--button-border)) + 2px));
  right: calc(0px - calc(calc(var(--border-1) * var(--button-border)) + 2px));
  bottom: calc(0px - calc(calc(var(--border-1) * var(--button-border)) + 2px));
  min-height: calc(var(--button-height) * var(--spacing-1) + var(--border-1) * var(--button-border) * 2px + 4px);
}
button:focus::after {
  opacity: 1;
  top: calc(0px - calc(calc(var(--border-1) * var(--button-border)) + 2px));
  left: calc(0px - calc(calc(var(--border-1) * var(--button-border)) + 2px));
  right: calc(0px - calc(calc(var(--border-1) * var(--button-border)) + 2px));
  bottom: calc(0px - calc(calc(var(--border-1) * var(--button-border)) + 2px));
  min-height: calc(var(--button-height) * var(--spacing-1) + var(--border-1) * var(--button-border) * 2px + 4px);
}
button.dropdown-toggle {
  background: var(--surface) !important;
  color: var(--on-background) !important;
  border: var(--border-1) solid var(--border);
  border-radius: var(--radius-1);
  padding-right: 32px !important;
  position: relative;
  min-width: unset;
  padding-left: var(--spacing-1) !important;
  text-transform: none !important;
  box-shadow: none !important;
}
.more button.dropdown-toggle {
  padding-right: var(--spacing-1) !important;
}
button.dropdown-toggle::after {
  position: absolute;
  right: 16px;
  top: 17px;
  left: unset;
  bottom: unset;
  border-radius: var(--radius-none);
  background: none;
  opacity: var(--quiet);
  content: '';
  border-top: 0.3em solid !important;
  border-right: 0.3em solid transparent !important;
  border-bottom: 0 !important;
  border-left: 0.3em solid transparent !important;
}
button.small-btn {
  flex-shrink: 0;
  background: transparent !important;
  padding: 0 calc(var(--spacing-1) * var(--sm-button-padding));
  z-index: 1;
  min-height: calc(var(--spacing-1) * var(--button-height));
  font: var(--sm-buttonTypography);
  text-transform: var(--sm-buttonTextTransform) !important;
  letter-spacing: var(--sm-buttonLetterSpacing);
  box-shadow: none !important;
  position: relative;
  border: none;  /* border for small button specified inside component, not at root */
  white-space: nowrap;
  flex-wrap: nowrap;
}
button.small-btn.icon::before {
  padding: 0 !important;
  min-width: calc(var(--sm-button-height) + 2px);
}
button.small-btn::after {
  top: calc(calc(var(--min-target) - calc(var(--spacing-1) * var(--sm-button-height)))/2 - calc(var(--border-1) * var(--button-border)) - 2px - var(--animation-focus-distance));
  bottom: calc(calc(var(--min-target) - calc(var(--spacing-1) * var(--sm-button-height)))/2 - calc(var(--border-1) * var(--button-border)) - 2px - var(--animation-focus-distance));
  min-height: calc(var(--sm-button-height) + 4px + calc(var(--animation-focus-distance) * 2));
  height: calc(var(--sm-button-height) + 4px);
  opacity: 0;
  left: calc(0px - 2px - var(--animation-focus-distance));
  right: calc(0px - 2px - var(--animation-focus-distance));
  transition: var(--animation-speed) cubic-bezier(0.68, -0.55, 0.265, 1.55) all;
}
button.small-btn:hover::after {
  top: calc(calc(var(--min-target) - calc(var(--spacing-1) * var(--sm-button-height)))/2 - calc(var(--border-1) * var(--button-border)) - 2px);
  bottom: calc(calc(var(--min-target) - calc(var(--spacing-1) * var(--sm-button-height)))/2 - calc(var(--border-1) * var(--button-border)) - 2px);
  min-height: calc(var(--sm-button-height) + 4px);
  opacity: var(--hover);
  left: -4px;
  right: -4px;
}
button.small-btn:focus::after {
  top: calc(calc(var(--min-target) - calc(var(--spacing-1) * var(--sm-button-height)))/2 - calc(var(--border-1) * var(--button-border)) - 2px);
  bottom: calc(calc(var(--min-target) - calc(var(--spacing-1) * var(--sm-button-height)))/2 - calc(var(--border-1) * var(--button-border)) - 2px);
  min-height: calc(var(--sm-button-height) + 4px);
}
button.small-btn::before {
  position: absolute;
  top: calc((var(--min-target) - (var(--spacing-1) * var(--sm-button-height)))/2);
  bottom: calc((var(--min-target) - (var(--spacing-1) * var(--sm-button-height)))/2);
  left: 0px;
  right: 0px;
  content: '';
  background: var(--button) !important;
  border-radius: calc(var(--radius-1) * var(--button-radius));
  z-index: -1;
  font: var(--sm-buttonTypography);
  box-shadow: var(--button-shadow);
  opacity: 1;
}
button.dropdown-toggle::before {
  position: absolute;
  top: 0px;
  left: 0px;
  right: 0px;
  bottom: 0px;
  content: '';
  background: var(--on-white);
  border-radius: calc(var(--radius-1) * var(--button-radius));
  opacity: 0;
}
button.left-icon {
  padding-left: calc(var(--spacing-1) * var(--button-padding) - var(--spacing-half));
}

button.right-icon {
  padding-left: calc(var(--spacing-1) * var(--button-padding) - var(--spacing-half));
}
button.MuiButton-outlined,
button.MuiButton-text {
  background: none !important;
  color: var(--button) !important;
}
button.MuiButton-outlined::before {
  position: absolute;
  border: calc(var(--border-1) * var(--button-border)) solid var(--button);
  border-radius: calc(var(--radius-1) * var(--button-radius));
  box-shadow: var(--button-shadow);
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  content: '';
}

button.small-btn.MuiButton-outlined::before {
  top: calc((var(--min-target) - (var(--spacing-1) * var(--sm-button-height)))/2);
  bottom: calc((var(--min-target) - (var(--spacing-1) * var(--sm-button-height)))/2);
  left: 0;
  right: 0;
  background: transparent !important;
  box-shadow: var(--button-shadow);
  height: calc(var(--sm-button-height) + 2px);
  border: calc(var(--border-1) * var(--button-border)) solid var(--button)
}

/* dark buttons */


/* begin - MuiButtonGroup
 *         Adding rules to keep interior outlined buttons from having
 *         rounded corners in vertical button groups.
 */
button.MuiButtonGroup-groupedOutlinedHorizontal:not(:last-of-type)::before {
  border-top-right-radius: 0px;
  border-bottom-right-radius: 0px;
}
button.MuiButtonGroup-groupedOutlinedHorizontal:not(:first-of-type)::before {
  border-top-left-radius: 0px;
  border-bottom-left-radius: 0px;
}
button.MuiButtonGroup-groupedOutlinedVertical:not(:last-of-type)::before {
  border-bottom-right-radius: 0px;
  border-bottom-left-radius: 0px;
}
button.MuiButtonGroup-groupedOutlinedVertical:not(:first-of-type)::before {
  border-top-right-radius: 0px;
  border-top-left-radius: 0px;
}
.MuiButtonGroup-root.MuiButtonGroup-contained {
  /* Button groups with contained buttons have default elevation for some reason
   * so removing that
   */
  box-shadow: none;
}
button.MuiButtonGroup-groupedVertical {
  /* overrides align-self for buttons in a vertical button group
   * so that they'll have the same size and stretch the width of
   * the button group
   */
  align-self: normal;
}
/* end - MuiButtonGroup */

button.MuiButton-outlined::after,
button.MuiButton-text::after {
  background: var(--button);
}

button.small-btn.MuiButton-text::before {
  position: absolute;
  top: calc(var(--sm-button-space)/2);
  left: 0px;
  right: 0px;
  bottom: calc(var(--sm-button-space)/2);
  content: '';
  background: transparent !important;
  box-shadow: var(--button-shadow) !important;
}
.small-btn .fa-solid, .small-btn .fa-regular {
  font-size: 14px !important
}
button.small-btn.icon::before {
  left: calc(calc( var(--min-target) - calc(var(--sm-button-height) * var(--spacing-1)) )/2);
  right: calc(calc( var(--min-target) - calc(var(--sm-button-height) * var(--spacing-1)) )/2);
}
button.small-btn.icon:hover::after {
  top: calc(calc(var(--min-target) - calc(var(--spacing-1) * var(--sm-button-height)))/2 - calc(var(--border-1) * var(--button-border)) - 2px);
  bottom: calc(calc(var(--min-target) - calc(var(--spacing-1) * var(--sm-button-height)))/2 - calc(var(--border-1) * var(--button-border)) - 2px);
  min-height: calc(var(--sm-button-height) + 4px);
  opacity: var(--hover);
  left: calc(calc(calc( var(--min-target) - calc(var(--sm-button-height) * var(--spacing-1)) )/2) - 4px);
  right: calc(calc(calc( var(--min-target) - calc(var(--sm-button-height) * var(--spacing-1)) )/2) - 4px);
}
/* COMPOENTNS and COLOR VARIENTS */
/* black buttons */
button.MuiButtonBase-root.black:not(.MuiButton-outlined):not(.MuiButton-text):not(.small-btn) {
  background: var(--black) !important;
  color: var(--white) !important;
}
button.MuiButtonBase-root.black::after {
  border: var(--focusBorder) solid var(--black) !important;
}
button.MuiButtonBase-root.black.MuiButton-outlined::after, .MuiButtonBase-root.black.MuiButton-text::after {
  background: var(--black);
}
button.MuiButtonBase-root.black.MuiButton-outlined::before {
  border: calc(var(--button-border) * var(--border-1)) solid var(--black);
}
button.MuiButtonBase-root.black.MuiButton-outlined, button.MuiButtonBase-root.black.MuiButton-text {
  background: none !important;
  color: var(--black) !important;
}
button.MuiButtonBase-root.black.MuiButton-outlined::before {
  border: calc(var(--button-border) * var(--border-1))  solid var(--black);
}
button.MuiButtonBase-root.black.MuiButton-outlined .inline-icon, button.MuiButtonBase-root.black.MuiButton-text .inline-icon {
  fill: var(--black) !important;
}
button.MuiButtonBase-root.black.MuiButton-outlined::after, button.MuiButtonBase-root.black.MuiButton-txet::after {
  background: transparent !important;
  border: var(--focusBorder) solid var(--black) !important;
}
.darkmode button.MuiButtonBase-root.black:not(.MuiButton-outlined):not(.MuiButton-text):not(.small-btn) {
  color: var(--dm-white)  !important;
  background: var(--black) !important;
}
.darkmode button.MuiButtonBase-root.black.MuiTab-root {
  background: none !important;
}
.darkmode button.MuiButtonBase-root.black::after, button.MuiButtonBase-root.black.small-btn.MuiButton-outlined::after, button.MuiButtonBase-root.black.small-btn.MuiButton-text::after {
  border: var(--focusBorder) solid  var(--black) !important;
  background: none !important;
}
.darkmode button.MuiButtonBase-root.black.MuiButton-outlined, .darkmode button.MuiButtonBase-root.black.MuiButton-text, button.MuiButtonBase-root.black.small-btn.MuiButton-outlined, button.MuiButtonBase-root.black.small-btn.MuiButton-text {
  background: none !important;
  color: var(--black) !important;
}
.darkmode button.MuiButtonBase-root.black.MuiButton-outlined::before {
  border: calc(var(--button-border) * var(--border-1))  solid var(--black);
}
.darkmode button.MuiButtonBase-root.black.MuiButton-outlined::after, .darkmode button.MuiButtonBase-root.black.MuiButton-txet::after {
  background: transparent !important;
  border: var(--focusBorder)  solid var(--black) !important;
}
button.MuiButtonBase-root.black.small-btn:not(.MuiButton-outlined):not(.MuiButton-text) {
  background: transparent !important;
  color: var(--white)
}
button.MuiButtonBase-root.small-btn.black:not(.MuiButton-outlined):not(.MuiButton-text)::before {
  background: var(--black) !important;
}
/* white buttons */
button.MuiButtonBase-root.white:not(.MuiButton-outlined):not(.MuiButton-text):not(.small-btn):not(.MuiTab-root) {
  background: var(--white) !important;
  color: var(--black) !important;
}
button.MuiButtonBase-root.white.small-btn:not(.MuiButton-outlined):not(.MuiButton-text)::before {
  background: var(--white) !important;
  color: var(--black) !important;
}
button.MuiButtonBase-root.white::after {
  border: var(--focusBorder) solid var(--white) !important;
}
button.MuiButtonBase-root.white.MuiButton-outlined::after, button.MuiButtonBase-root.white.MuiButton-text::after {
  background: var(--white);
}
button.MuiButtonBase-root.white.MuiButton-outlined::before {
  border: calc(var(--button-border) * var(--border-1)) solid var(--white);
}
button.MuiButtonBase-root.white.MuiButton-outlined, button.MuiButtonBase-root.white.MuiButton-text {
  background: none !important;
  color: var(--white) !important;
}
button.MuiButtonBase-root.white.MuiButton-outlined::before {
  border: calc(var(--button-border) * var(--border-1))  solid var(--white);
}
button.MuiButtonBase-root.white.MuiButton-outlined::after, button.MuiButtonBase-root.white.MuiButton-txet::after {
  background: transparent !important;
  border: var(--focusBorder) solid var(--white) !important;
}
.darkmode button.MuiButtonBase-root.white:not(.MuiButton-outlined):not(.MuiButton-text):not(.small-btn):not(.MuiTab-root){
  color: var(--black)  !important;
  background: var(--dm-white) !important;
}
.darkmode button.MuiButtonBase-root.white.MuiTab-root {
  background: none !important;
}
.darkmode button.MuiButtonBase-root.white::after {
  border: var(--focusBorder)  solid  var(--dm-white) !important;
  background: none !important;
}
.darkmode button.MuiButtonBase-root.white.MuiButton-outlined, .darkmode button.MuiButtonBase-root.white.MuiButton-text {
  background: none !important;
  color: var(--dm-white) !important;
}
.darkmode button.MuiButtonBase-root.white.MuiButton-outlined::before {
  border: calc(var(--button-border) * var(--border-1))  solid var(--dm-white);
}
.darkmode button.MuiButtonBase-root.white.MuiButton-outlined::after, .darkmode button.MuiButtonBase-root.white.MuiButton-txet::after {
  background: transparent !important;
  border: var(--focusBorder) solid var(--dm-white) !important;
}
.darkmode button.MuiButtonBase-root.white.small-btn{
  background: none !important;
}
.darkmode button.MuiButtonBase-root.white.small-btn:not(.MuiButton-outlined):not(.MuiButton-text)::before {
  background: var(--dm-white) !important;
  color: var(--black) !important;
}
/* black divider */
.MuiList-root.black .MuiDivider-root, .MuiDivider-root.white {
  border-color: var(--white);
}
/* white divider */
.MuiList-root.white .MuiDivider-root, .MuiDivider-root.black,
.darkmode .MuiList-root.white .MuiDivider-root {
  border-color: var(--black);
}
/* darkmode divider */
.darkmode .MuiList-root .MuiDivider-root.white  {
  border-color: var(--dm-white);
}
.darkmode .MuiList-root .MuiDivider-root.black {
  border-color: var(--black);
}

/* darkmode list and divider */
.darkmode .MuiList-root {
  background: var(--dm-surface);
  border: 1px solid var(--dm-border);
  color: var(--dm-on-surface);
}
.darkmode .MuiList-root.white , .darkmode .white .MuiList-root {
  border-color: var(--dm-on-background);
}
.darkmode .MuiList-root.black , .darkmode .white .MuiList-root   {
  border-color: var(--black);
}

/* darkmode list and divider */
.darkmode .MuiList-root {
  background: var(--dm-surface);
  border: 1px solid var(--dm-border);
  color: var(--dm-on-surface);
}
.darkmode .MuiList-root .MuiDivider-root {
  border-color: var(--dm-on-background);
}
.darkmode .MuiList-root.black .MuiDivider-root {
  border-color: var(--dm-white);
}

/* hotlinks */
a {
  color: var(--hotlink);
  text-decoration: var(--hotlink-decoration)
}
a:visited {
  opacity: .7
}
a:hover {
  text-decoration: var(--hotlink-hover-decoration) !important;
}
a:active {
  text-decoration: var(--hotlink-hover-decoration)
}


/*  COLORED, PRIMARY, TERTIARY_BG */
.darkmode .default{
  background: none !important;
  color: var(--dm-on-background-tertiary) !important;
}
.darkmode .primary, .darkmode .backgroundTertiary {
  background: var(--dm-background-tertiary) !important;
  color: var(--dm-on-background-tertiary) !important;
}
.darkmode .default button:not(.MuiTab-root), .darkmode .primary button:not(.MuiTab-root) , .darkmode .backgroundTertiary button:not(.MuiTab-root) {
  background: var(--dmbuttonOnTertiary) !important;
  color: var(--dmonbuttonOnTertiary) !important;
}
.darkmode .default button::after, .darkmode .primary button::after, .darkmode .backgroundTertiary button::after {
  border: var(--focusBorder) solid rgb(var(--dmfocusOnTertiary));
}
.darkmode .default .fa-regular:not(button *), .darkmode .primary .fa-regular:not(button *), .darkmode .default   .fa-solid:not(button *) {
  color: var(--dmiconOnTertiary) !important;
}
.darkmode .default a, .backgroundTertiary a, .darkmode .primary a, .backgroundTertiary a  {
  text-decoration:  var(--dmhotlinkDecorationOnTertiary );
  color: var(--dmhotlinkOnTertiary );
}
.darkmode .fa-regular:not(button *), .darkmode .fa-solid:not(button *) {
  color: var(--dm-icon) !important;
}
.darkmode a {
  text-decoration:  var(--dmhotlinkDecorationOnTertiary );
  color: var(--dmhotlinkOnTertiary );
}
.darkmode button:not(.black):not(.white):not(.MuiTab-root):not(.MuiPaginationItem-root):not(.small-btn):not(.MuiButton-outlined):not(.MuiButton-text).MuiButtonBase-root {
  color: var(--dm-on-button) !important;
  background: var(--dm-button) !important;
}
.darkmode button.small-btn:not(.black):not(.white):not(.MuiTab-root):not(.MuiButton-outlined):not(.MuiButton-text).MuiButtonBase-root {
  color: var(--dm-on-button) !important;
}


/* darkmode buttons */
.darkmode > button {
  background: var(--dm-button) !important;
  color: var(--dm-on-button) !important;
}
.darkmode .white > button {
  color: var(--dm-on-white) !important;
  background: var(--dm-white) !important;
}
.darkmode .white > button {
  color: var(--dm-white);
  background: var(--dm-nearblack) !important;
}
.darkmode .white > button.MuiTab-root {
  background: none !important;
}
.darkmode > button::after {
  background: none !important;
}
.darkmode > button.MuiTab-root {
  background: none !important;
  box-shadow: none !important
}
.darkmode button.MuiTab-root::after {
  background: unset !important;
}
.darkmode button.dropdown-toggle {
  background: var(--dm-white) !important;
  color: var(--dm-on-white) !important;
}
.darkmode button.small-btn::after {
  border: var(--focusBorder) solid var(--dm-button) !important;
  background: none !important;
}
.darkmode button.small-btn::before {
  background: var(--dm-button) !important;
  box-shadow: var(--button-boxshadow) !important;
}
.darkmode .white button.small-btn:not(.MuiButton-outlined):not(.MuiButton-text)::before {
  background: var(--black) !important;
}
.darkmode .white button::after {
  border: var(--focusBorder)  solid var(--black) !important;
  background: none !important;
}
.darkmode button.MuiButton-outlined,
.darkmode button.MuiButton-text {
  background: none !important;
  color: var(--dm-button) !important;
}
.darkmode .white button.MuiButton-outlined,
.darkmode .white button.MuiButton-text {
  background: none !important;
  color: var(--dm-on-white) !important;
}
.darkmode button.MuiButton-outlined::before {
  border: calc(var(--button-border) * var(--border-1)) solid var(--dm-button);
  box-shadow: var(--dm-button-boxshadow);
  background: none !important;
}
.darkmode .white button.MuiButton-outlined::before {
  border: var(--button-border) solid var(--dm-on-white);
}
.darkmode button.MuiButton-outlined .inline-icon,
.darkmode button.MuiButton-text .inline-icon {
  fill: var(--d-button);
}
.darkmode .white button .inline-icon,
.darkmode .white button.MuiButton-text .inline-icon {
  fill: var(--white);
  opacity: .6;
}
.darkmode .white button.MuiButton-outlined .inline-icon,
.darkmode .white button.MuiButton-text .inline-icon {
  fill: var(--dm-on-white);
}
.darkmode button.MuiButton-outlined::after,
.darkmode button.MuiButton-text::after {
  background: var(--transparent);
}
.darkmode .white button.MuiButton-outlined::after,
.darkmode .white button.MuiButton-text::after {
  background: transparent !important;
  border: var(--focusBorder)  solid var(--black) !important;
}
.darkmode button.small-btn.MuiButton-text::before {
  background: none !important;
  box-shadow: var(--dm-button-boxshadow);
}
.darkmode .button {
  background: var(--dm-button) !important;
  color: var(--dm-on-button) !important;
}
.darkmode > button.small-btn {
  background: transparent !important
}
.darkmode > button.small-btn:not(.MuiButton-outlined):not(.MuiButton-text):not(.white):not(.black)::before {
  background: var(--dm-button) !important;
  color: var(--dm-on-button) !important;
}
/* pagination */
button.MuiPaginationItem-root {
  border: calc(var(--border-1) * var(--button-border)) solid var(--button) !important;
  opacity: var(--quiet);
  min-height: var(--min-target)
}
button.MuiPaginationItem-root:hover {
  opacity: 1;
}
.MuiPaginationItem-root.Mui-selected {
  background: var(--button);
  opacity: 1;
}
/* darmode pagination */
.darkmode button.MuiPaginationItem-root {
  border: calc(var(--border-1) * var(--button-border)) solid var(--dm-button) !important;
}
.darkmdoe button.MuiPaginationItem-root.Mui-selected {
  background: var(--dm-button);
  opacity: 1;
}

.gradient-swatch {
  width: 400px;
  height: var(--spacing-6);
  display: flex;
  align-items: center;
  padding: var(--spacing-1);
}

.clickable {
  cursor: pointer;
}
.MuiCard-root > .fa-solid, .MuiCard-root > .fa-regular {
  padding-bottom: 10px;
  margin-right: 8px;
  font-size: 1.25em;
  color: var(--icon);
}
.MuiAlert-root button.small-btn svg {
  height: var(--spacing-2);
}
.darkmode > .MuiCard-root .fa-solid, .darkmode > .MuiCard-root .fa-regular {
  color: var(--dm-icon);
}
.MuiCard-root.clickable::after{
 position: absolute;
 content: '';
 top:    calc(0px - 3px - var(--animation-focus-distance));
 bottom: calc(0px - 3px - var(--animation-focus-distance));
 left:   calc(0px - 3px - var(--animation-focus-distance));
 right:  calc(0px - 3px - var(--animation-focus-distance));
 opacity: 0;
 border: var(--focusBorder)  solid var(--button);
 border-radius: calc(calc(var(--radius-1) * var(--card-radius)) + 1.6px);
 box-shadow: 0 0 var(--focusBlur) 0px var(--button);
 transition: var(--animation-speed)  cubic-bezier(0.68, -0.55, 0.265, 1.55) all;
 pointer-events: none;
}
.MuiCard-root.clickable:hover::after{
 opacity: .5;
 top:    calc(0px - 3px);
 bottom: calc(0px - 3px);
 left:   calc(0px - 3px);
 right:  calc(0px - 3px);
}
.MuiCard-root.clickable:focus::after{
 opacity: 1;
 top:    calc(0px - 3px);
 bottom: calc(0px - 3px);
 left:   calc(0px - 3px);
 right:  calc(0px - 3px);
}

.MuiCard-root.centerAligned {
  text-align: center;
}
.MuiCard-root.centerAligned .MuiCardActions-root {
  justify-content: center !important;
}
.MuiCard-root.centerAligned .client-title-area  {
  align-items: center;
  justify-content: center
}
.MuiCard-root .client-title-area .inline-icon{
  height: var(--spacing-5);
  width: var(--spacing-5);
  justify-content: center;
  display: flex;
}
.MuiCardMedia-root {
  width: 100%;
  height: 0;
  padding-top: 56.25%;
  position: relative;
  overflow: hidden;
}
.MuiCard-root.cinemascope {
  width: 100%;
  height: 0;
  padding-top: 42.86%;
  position: relative;
  overflow: hidden;
}
.card.statCard .inline-icon {
  width: var(--spacing-6) !important;
  height: var(--spacing-6) !important;
}
.card.centerAligned.statCard .inline-icon {
  margin: auto;
}
.card.statCard {
  padding: calc(var(--spacing-1) * var(--card-padding) * 2) calc(var(--spacing-1) * var(--card-padding)) !important;
}

.client-title-area {
  display: flex;
  gap: var(--spacing-1);
  align-items: start;
}
.MuiCard-root {
  position: relative;
  overflow: visible !important;
}
.MuiCardMedia-root {
  background-color: var(--on-background);
  opacity: var(--disabled);
}
/* darkmode card */
.darkmode .MuiCard-root {
  background: var(--dm-surface);
  border: 1px solid var(--dm-border);
  color: var(--dm-on-surface);
}
.darkmode .MuiCardMedia-root {
  background-color: var(--dm-on-background);
  opacity: var(--disabled);
}
/* dark mode chips */
.MuiChip-avatar {
  margin: 0 !important;
}
.darkmode .MuiChip-root {
  color: var(--dm-white);
}
.darkmode .MuiChip-root::after {
  border: var(--focusBorder) solid var(--dm-white);
}
.darkmode .MuiChip-root svg path {
  fill: var(--dm-white);
}
/* hero */
.hero {
  display: flex;
  flex-direction: column;
  gap: calc(var(--spacing-1) * var(--hero-padding));
  padding:  calc(var(--hero-padding) * var(--spacing-1));
  margin: 0;
}

/* toast */
.MuiAlert-root .MuiAlert-message {
  overflow: visible;
  padding: 0;
  font-size: var(--subtitle1FontSize);
  font-family: var(--subtitle1FontFamily);
  font-weight: var(--subtitle1FontWeight);
  line-height: var(--subtitle1LineHeight);
  letter-spacing: var(--subtitle1LetterSpacing);
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}
.MuiAlert-root button.small-btn {
  color: var(--white) !important;
}
.MuiAlert-root button.small-btn::before {
  background: var(--black) !important;
}
.MuiAlert-root button.small-btn.text {
  color: var(--black) !important;
}
.MuiAlert-root button.small-btn.text::before {
  background: var(--transparent) !important;
}
.MuiAlert-root button.small-btn::after {
  border: var(--focusBorder) solid var(--black);
}
/* darmode toast */
.darkmode .MuiAlert-root {
  background: var(--elevation-bg-1);
  border: 1px solid var(--dm-border);
  color: var(--dm-white);
}
.darkmode .MuiAlert-root.MuiAlert-standardError::after {
  background: var(--dm-danger);
}
.darkmode .MuiAlert-root.MuiAlert-standardError .MuiAlert-icon {
  color: var(--dm-danger);
}
.darkmode .MuiAlert-root.MuiAlert-standardError .overline {
  color: var(--dm-danger);
}
.darkmode .MuiAlert-root.MuiAlert-standardWarning::after {
  background: var(--dm-warning);
}
.darkmode .MuiAlert-root.MuiAlert-standardWarning .MuiAlert-icon {
  color: var(--dm-warning);
}
.darkmode .MuiAlert-root.MuiAlert-standardWarning .overline {
  color: var(--dm-warning);
}
.darkmode .MuiAlert-root.MuiAlert-standardSuccess::after {
  background: var(--dm-success);
}
.darkmode .MuiAlert-root.MuiAlert-standardSuccess .MuiAlert-icon {
  color: var(--dm-success);
}
.darkmode .MuiAlert-root.MuiAlert-standardSuccess .overline {
  color: var(--dm-success);
}
.darkmode .MuiAlert-root.MuiAlert-standardInfo::after {
  background: var(--dm-info);
}
.darkmode .MuiAlert-root.MuiAlert-standardInfo .MuiAlert-icon {
  color: var(--dm-info);
}
.darkmode .MuiAlert-root.MuiAlert-standardInfo .overline {
  color: var(--dm-info);
}
.darkmode .MuiAlert-root .MuiButton-root {
  color: var(--black) !important;
}
.darkmode .MuiAlert-root button.small-btn.text {
  color: var(--dm-white) !important;
}
.darkmode .MuiAlert-root .MuiButton-root::before {
  background: var(--dm-white) !important;
}
.darkmode .MuiAlert-root .MuiButton-root::after {
  border: var(--focusBorder)  solid var(--dm-white) !important;
}
.darkmode .MuiAlert-root button svg path {
  fill: var(--dm-white) !important
}
/* dark mode radio buttons */
.darkmode .MuiRadio-root svg path {
  fill: var(--dm-white)
}
.darkmode .MuiRadio-root.Mui-checked svg path {
  fill: var(--dm-button)
}

/* darkmode checkboxes */
.darkmode .MuiFormControlLabel-root {
  color: var(--dm-on-background)
}
.darkmode .MuiCheckbox-root svg path {
  fill: var(--dm-white)
}
.darkmode .MuiCheckbox-root.Mui-checked svg path {
  fill: var(--dm-button)
}
.darkmode .MuiCheckbox-root.black svg path {
  fill: var(--black)
}
.darkmode .MuiCheckbox-root.black.Mui-checked svg path {
  fill: var(--black)
}
.darkmode .MuiCheckbox-root.white svg path {
  fill: var(--dm-white)
}
.darkmode .MuiCheckbox-root.white.Mui-checked svg path {
  fill: var(--dm-white)
}
/* dark mode helper text */
.darkmode .MuiFormHelperText-root {
  color: var(--dm-white);
  opacity: var(--quiet);
}
/* dark mode form labels */
.darkmode .MuiFormLabel-root {
  color: var(--dm-on-background)
}
/* secodary tabs */
.secondaryTab.MuiTab-root {
  font-size: var(--CTA-SmallFontSize);
  font-family: var(--CTA-SmallFontFamily);
  font-weight: var(--CTA-SmallFontWeight);
  line-height: var(--CTA-SmallLineHeight);
  text-transform: var(--CTA-SmallTextTransform);
  letter-spacing: var(--CTA-SmallCharcterSpacing);
  min-height: var(--min-target);
  box-shadow: none !important;
}
/* darkmode tabs */
.darkmode .MuiTabs-root {
  background: var(--dm-button) !important;
  color: var(--dm-on-button)  !important;
  box-shadow: none !important;
}
.MuiTabs-root .MuiTab-root {
    box-shadow: none !important;
}
/* tab variations */
.MuiTabs-root.black .MuiTab-root {
  background: var(--black) !important;
  color: var(--white) !important;
}
.MuiTabs-root.black .MuiTab-root::after {
  border: none !important;
  opacity: 0;
}
.MuiTabs-root.black .MuiTab-root:hover::after {
  border-bottom: var(--spacing-half) solid var(--buttonOnWhite) !important;
  opacity: .5;
}
.MuiTabs-root.black .MuiTabs-indicator {
  background: var(--buttonOnWhite) !important;
}
.MuiTabs-root.white .MuiTab-root {
  background: var(--white) !important;
  color: var(--black) !important;
}
.MuiTabs-root.white .MuiTab-root::after {
  border: none !important;
  opacity: 0;
}
.MuiTabs-root.white .MuiTab-root:hover::after {
  border-bottom: var(--spacing-half) solid var(--buttonOnWhite) !important;
  opacity: .5;
}
.MuiTabs-root.white .MuiTabs-indicator {
  background: var(--buttonOnWhite) !important;
}
.MuiTabs-root .MuiTabs-indicator {
  background: var(--on-button) !important;
}
/* darkmode tabs */
.darkmode .MuiTabs-root {
  background: var(--dm-button);
}
.darkmode .MuiTab-root {
  background: var(--dm-button) !important;
  color: var(--dm-on-button) !important;
}
.darkmode .MuiTab-root:hover::after {
  border-bottom: var(--spacing-half) solid var(--dm-on-button);
}
.darkmode .MuiTabs-root .MuiTabs-indicator {
  background: var(--dm-on-button) !important;
}
.darkmode .MuiTabs-root.black .MuiTab-root {
  background: var(--black) !important;
  color: var(--dm-white) !important;
}
.darkmode .MuiTabs-root.black .MuiTab-root::after {
  border: none !important;
  opacity: 0;
}
.darkmode .MuiTabs-root.black .MuiTab-root:hover::after {
  border-bottom: var(--spacing-half) solid var(--dm-white) !important;
  opacity: .5;
}
.darkmode .MuiTabs-root.black .MuiTabs-indicator {
  background: var(--dm-white) !important;
}
.darkmode .MuiTabs-root.white .MuiTab-root {
  background: var(--transparent) !important;
  color: var(--black) !important;
}
.darkmode .MuiTabs-root.white .MuiTab-root::after {
  border: none !important;
  opacity: 0;
}
.darkmode .MuiTabs-root.white .MuiTab-root:hover::after {
  border-bottom: var(--spacing-half) solid var(--black) !important;
  opacity: .5;
}
.darkmode .MuiTabs-root.white .MuiTabs-indicator {
  background: var(--black) !important;
}
/* accordian */
.MuiAccordion-root {
  margin-bottom: var(--spacing-2);
}
.MuiAccordion-root::after {
 position: absolute;
 top: calc(0px - calc(var(--focusBorder) + 2px + var(--animation-focus-distance)));
 left: calc(0px - calc(var(--focusBorder) + 2px + var(--animation-focus-distance)));
 right: calc(0px - calc(var(--focusBorder) + 2px + var(--animation-focus-distance)));
 bottom: calc(0px - calc(var(--focusBorder) + 2px + var(--animation-focus-distance)));
 border-radius: calc(var(--spacing-1) + 1.6px);
 border: var(--focusBorder) solid var(--button);
 background: transparent !important;
 opacity: 0;
 content: '';
 transition: var(--animation-speed) cubic-bezier(0.68, -0.55, 0.265, 1.55) all;
 z-index: -1;
}
.MuiAccordion-root:hover::after {
 position: absolute;
 top: calc(0px - calc(var(--focusBorder) + 2px));
 left: calc(0px - calc(var(--focusBorder) + 2px));
 right: calc(0px - calc(var(--focusBorder) + 2px));
 bottom: calc(0px - calc(var(--focusBorder) + 2px));
 opacity: .5;
}
.MuiAccordion-root:focus::after {
 position: absolute;
 top: calc(0px - calc(var(--focusBorder) + 2px));
 left: calc(0px - calc(var(--focusBorder) + 2px));
 right: calc(0px - calc(var(--focusBorder) + 2px));
 bottom: calc(0px - calc(var(--focusBorder) + 2px));
 opacity: 1;
}
/* darkmode accordian */
.darkmode .MuiAccordion-root {
  background: var(--dm-surface) !important;
  color: var(--dm-on-surface) !important;
  border: 1px solid var(--dm-border);
}
.darkmode .MuiAccordion-root svg path{
  fill: var(--dm-on-surface) !important;
}
.darkmode .MuiAccordion-root::after {
  border: var(--focusBorder) solid var(--dm-button);
}
/* lists */
.list-content {
  flex-grow: 1;
}
/* MuiFormControl-root */

.MuiFormControl-root {
  display: flex;
  gap: var(--spacing-1);
  margin: 8px 0 0 !important;
}
/* MuiFormLabel-root NOT ANIMATED */
.MuiFormControl-root .MuiFormLabel-root:not(.MuiInputLabel-animated), .motionSensative .MuiFormControl-root .MuiFormLabel-root.MuiInputLabel-animated, .motionSensative .MuiFormControl-root .MuiFormLabel-root.MuiInputLabel-animated.MuiInputLabel-shrink[data-shrink="true"]  {
  position: absolute;
  top: calc(calc(var(--spacing-1) * var(--button-height))/2);
  transform: translate(0px, calc(-50% - 32px)) scale(.85) !important;
}
/* MuiFormLabel-root */
.MuiFormControl-root .MuiFormLabel-root.MuiInputLabel-animated {
  position: absolute;
  top: calc(calc(var(--spacing-1) * var(--button-height))/2);
  transform: translate(var(--spacing-2) , -50%);
}
.MuiFormControl-root .MuiFormLabel-root.MuiInputLabel-animated.MuiInputLabel-shrink[data-shrink="true"] {
  transform: translate(0px, calc(-50% - 32px)) scale(.85);
}


/* dark mode dropdown list */
.MuiFormControl-root:not(.info):not(.success):not(.warning):not(.danger):not(hexValue) .MuiOutlinedInput-root {
    color: var(--input);
    background: var(--input);
}
.MuiPaper-root.MuiPopover-paper .MuiMenuItem-root {
  background: var(--surface) !important;
}
.MuiPaper-root.MuiPopover-paper {
  transform: translate(0px, 0px) !important;
  background: var(--surface);
  color: var(--on-surface);
  border: 1px solid var(--border);
  padding: 0 0 0 8px;

}
.MuiPaper-root.MuiPopover-paper .MuiCheckbox-root{
 color: var(--on-surface);
}
.MuiButtonBase-root .MuiMenuItem-root.Mui-selected {
  background: var(--dropdown-focus-bg);
}
.MuiPopover-paper .MuiMenuItem-root:hover {
  background: var(--dropdown-hover-bg) !important;
}
.MuiButtonBase-root .MuiMenuItem-root.Mui-selected,  .MuiPaper-root.MuiPopover-paper .MuiMenuItem-root:focus {
  background: var(--dropdown-focus-bg) !important;
}
.MuiSelect-multiple {
  border: none !important;
}
.darkmode .MuiPaper-root.MuiPopover-paper{
  background: var(--dm-surface) !important;
  color: var(--dm-on-surface) !important;
  border: 1px solid var(--dm-border) !important;
}
.darkmode .MuiPaper-root.MuiPopover-paper .MuiCheckbox-root{
 color: var(--dm-white);
}
.darkmode .MuiFormControl-root:not(.info):not(.success):not(.warning):not(.danger):not(hexValue) .MuiOutlinedInput-root {
    color: var(--dm-on-input);
    background: var(--dm-input);
}
.darkmode .MuiPopover-paper .MuiList-root{
  background: var(--dm-surface);
  color: var(--dm-on-surface)
}
.darkmode .MuiPaper-root.MuiPopover-paper .MuiMenuItem-root {
  background: var(--dm-surface) !important;
}
.darkmode .MuiButtonBase-root .MuiMenuItem-root.Mui-selected {
  background: var(--dm-dropdown-focus-bg);
}
.MuiPaper-root.MuiPopover-paper .MuiMenuItem-root:hover {
  background: var(--dm-dropdown-hover-bg) !important;
}
.darkmode .MuiButtonBase-root .MuiMenuItem-root.Mui-selected,  .darkmode .MuiPaper-root.MuiPopover-paper .MuiMenuItem-root:focus {
  background: var(--dm-dropdown-focus-bg) !important;
}

/* switchBaseh */
.MuiSwitch-root {
  position: relative;
}
.MuiSwitch-root .MuiSwitch-switchBase  {
  position: absolute;
  top: 50% !important;
  transform: translate(0, -50%) !important;
}
.MuiSwitch-root .MuiSwitch-switchBase.Mui-checked  {
  left: unset;
  right: 0;
}
.MuiSwitch-root .MuiSwitch-switchBase .MuiSwitch-thumb {
  background: var(--button);
  padding: 0;
  left: 0;
  width: var(--spacing-3);
  height: var(--spacing-3);
  border-radius: calc(var(--sliderhandleRadius) * var(--radius-1)) !important;
  position: relative;
  box-shadow: var(--sliderhandleElevation);
}
.MuiSwitch-root .MuiSwitch-switchBase .MuiSwitch-thumb::after {
  position: absolute;
  pointer-events: none;
  top: calc(0px - calc(var(--focusBorder) + 2px + var(--animation-focus-distance)));
  left: calc(0px - calc(var(--focusBorder) + 2px + var(--animation-focus-distance)));
  right: calc(0px - calc(var(--focusBorder) + 2px + var(--animation-focus-distance)));
  bottom: calc(0px - calc(var(--focusBorder) + 2px + var(--animation-focus-distance)));
  border-radius: calc(calc(var(--sliderhandleRadius) * var(--radius-1))  + 1.6px);
  border: var(--focusBorder) solid var(--button);
  background: transparent !important;
  opacity: 0;
  content: '';
  transition: var(--animation-speed) cubic-bezier(0.68, -0.55, 0.265, 1.55) all;
  z-index: -1;
}
.MuiSwitch-root:hover .MuiSwitch-switchBase .MuiSwitch-thumb::after {
 position: absolute;
 top: calc(0px - calc(var(--focusBorder) + 2px));
 left: calc(0px - calc(var(--focusBorder) + 2px));
 right: calc(0px - calc(var(--focusBorder) + 2px));
 bottom: calc(0px - calc(var(--focusBorder) + 2px));
 opacity: .5;
}
.MuiSwitch-root:focus .MuiSwitch-switchBase .MuiSwitch-thumb::after {
 position: absolute;
 top: calc(0px - calc(var(--focusBorder) + 2px));
 left: calc(0px - calc(var(--focusBorder) + 2px));
 right: calc(0px - calc(var(--focusBorder) + 2px));
 bottom: calc(0px - calc(var(--focusBorder) + 2px));
 opacity: 1;
}
.MuiSwitch-root .MuiSwitch-track {
  position: absolute;
  top: 50%;
  transform: translate(0, -50%);
  left: calc(var(--spacing-1) + 1px) ;
  right: calc(var(--spacing-1) + 1px) ;
  height: calc(var(--spacing-1) * var(--sliderbarHeight)) ;
  border-radius: calc(calc(var(--sliderhandleRadius) * var(--radius-1))  + 1.6px);
  background-color: var(--on-background);
  border: none;
  opacity: var(--disabled);
  width: calc(100% - var(--spacing-2));
  box-shadow: var(--barInBevel);
}
.MuiSwitch-root .MuiButtonBase-root.Mui-checked ~ .MuiSwitch-track {
  background-color: var(--button) !important;
}
/* darm mode swicth */
.darkmode .MuiSwitch-root .MuiSwitch-switchBase .MuiSwitch-thumb {
  background: var(--dm-button);
}
.darkmode .MuiSwitch-root .MuiSwitch-switchBase .MuiSwitch-thumb::after {
  border: var(--focusBorder) solid var(--button);
}
.darkmode .MuiSwitch-root .MuiSwitch-track {
  background-color: var(--dm-on-background);
  border: none;
}
.darkmode .MuiSwitch-root .MuiButtonBase-root.Mui-checked ~ .MuiSwitch-track {
  background-color: var(--dm-button) !important;
}
/* sliders */
.MuiSlider-root {
  height: var(--min-target);
}
.MuiSlider-root .MuiSlider-track{
  border: none;
  height: var(--min-target);
  background-color: var(--button);
  height: calc(var(--sliderbarHeight) * var(--spacing-1));
  margin-top: calc( calc(var(--min-target) - calc( var(--sliderbarHeight) * var(--spacing-1) ))/2);
  opacity: var(--quiet);

}

.MuiSlider-root .MuiSlider-thumb {
  /* need to update once the coorect value is being passed
  height: calc( var(--sliderhandleHeight) * var(--spacing-1) );
   width: calc( var(--sliderhandleHeight) * var(--spacing-1) );*/
   width: var(--spacing-3);
   width: var(--spacing-3);
   border-radius: calc(var(--sliderhandleRadius) * var(--radius-1));
   background-color: var(--button);
   position: relative;
 }
 .MuiSlider-root .MuiSwitch-thumb::after {
   position: absolute;
   pointer-events: none;
   top: calc(0px - calc(var(--focusBorder) + 2px + var(--animation-focus-distance)));
   left: calc(0px - calc(var(--focusBorder) + 2px + var(--animation-focus-distance)));
   right: calc(0px - calc(var(--focusBorder) + 2px + var(--animation-focus-distance)));
   bottom: calc(0px - calc(var(--focusBorder) + 2px + var(--animation-focus-distance)));
   border-radius: calc(calc(var(--sliderhandleRadius) * var(--radius-1))  + 1.6px);
   border: var(--focusBorder) solid var(--button);
   background: transparent !important;
   opacity: 1;
   content: '';
   transition: var(--animation-speed) cubic-bezier(0.68, -0.55, 0.265, 1.55) all;
   z-index: -1;
 }

 .darkmode .MuiSlider-root .MuiSwitch-thumb,  .darkmode .MuiSlider-root .MuiSlider-thumb{
   background-color: var(--dm-button);
 }
 .darkmode .MuiSlider-root .MuiSwitch-thumb::after, .darkmode .MuiSlider-root .MuiSlider-thumb::after {
   border: var(--focusBorder) solid var(--dm-button);
 }
  .darkmode .MuiSlider-root .MuiSlider-track{
   background-color: var(--dm-button);
   opacity: var(--quiet);
 }

 .darkmode .MuiSlider-root .MuiSlider-rail {
   background: var(--dm-on-background)
 }
/* popovers */
.MuiPopover-paper {
   border-radius: calc(var(--popoverRadius) * var(--radius-1)) !important;
   background: var(--surface);
   z-index: 1;
   transform: translate(calc(0px - var(--spacing-half)), calc(0px - var(--spacing-half))) !important;
   box-shadow: var(--popoverShadow);
   color: var(--black);
 }
.darkmode .MuiPopover-paper  {
  background: var(--dm-background) !important;
  color: var(--black) !important;
}
.darkmode .MuiPopover-paper::before {
  background: var(--dm-white)  !important;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: calc(var(--popoverRadius) * var(--radius-1));
  z-index: -1;
  content: "";
}

/* tooltip */
/* - so same as for popover */
/* .MuiTooltip-popper {
  background: var(--dm-background) !important;
  color: var(--black)  !important;
  z-index: 1;
}
.MuiTooltip-tooltip {
    background: var(--dm-background) !important;
    color: var(--black)  !important;
    z-index: 1;
}

.MuiTooltip-tooltip::before {
  background: var(--dm-white)  !important;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: -1;
  content: "";
} */
.MuiOutlinedInput-root {
  position: relative;
}
.MuiOutlinedInput-root.MuiSwitch-switchBase::after {
  position: absolute;
  height: var(--sliderhandleHeight);
  width: var(--sliderhandleHeight);
  right: calc(0px - calc(var(--focusBorder) + 2px + var(--animation-focus-distance)));
  bottom: calc(0px - calc(var(--focusBorder) + 2px + var(--animation-focus-distance)));
  border: var(--focusBorder) solid var(--button);
  background: transparent !important;
  opacity: 0;
  transition: var(--animation-speed) cubic-bezier(0.68, -0.55, 0.265, 1.55) all;
  z-index: -1;
  background: transparent;
  pointer-events: none;
  border-radius: calc(calc(var(--sliderhandleRadius) * var(--radius-1))  + 1.6px);
}
.MuiOutlinedInput-root.MuiSwitch-switchBase:hover::after {
  position: absolute;
  height: calc(var(--spacing-3) + 3px);
  width: calc(var(--spacing-3) + 3px);
  right: calc(0px - calc(var(--focusBorder) + 2px));
  bottom: calc(0px - calc(var(--focusBorder) + 2px));
  opacity: .5;
}
.MuiOutlinedInput-root.MuiSwitch-switchBase:focus::after {
  position: absolute;
  height: calc(var(--spacing-3) + 3px);
  width: calc(var(--spacing-3) + 3px);
  right: calc(0px - calc(var(--focusBorder) + 2px));
  bottom: calc(0px - calc(var(--focusBorder) + 2px));
  opacity: 1;
}

/* dark mode input fields */
.darkmode .MuiOutlinedInput-notchedOutline fieldset {
  border: 1px solid var(--dm-border);
  border-radius: var(--spacing-1);
  border-color: var(--dm-border);
  box-shadow: none;
  background: var(--dm-surface);
  color: var(--dm-on-surface);
}
.darkmode .MuiOutlinedInput-notchedOutline fieldset::focus {
  border: 1px auto var(--dm-button);
  box-shadow: 0 0 var(--focusBlur) 1px var(--dm-button-half);
}
/* gradient header */
.gradient-title {

}
/* gradients */
.darkmode .gradient-1 {
  background: var(--dm-gradient-1);
  color: var(--dm-on-gradient-1);
}
/* icons */
.icon-body {
  display: flex;
  justify-content: center;
  align-items: center;
  width: var(--spacing-5);
  height: var(--spacing-5);
  border-radius: var(--radius-1);
  flex: none;
}
.icon-body .inline-icon {
  width: 24px;
  height: 24px;
}
.inline-icon path {
  fill: var(--icon);
}
/* dark mode icon */
.inline-icon path {
  fill: var(--dm-icon);
}

/* dark mode states */
.darkmode .MuiSvgIcon-root.MuiSvgIcon-colorError {
 color: var(--dm-danger);
}
.darkmode .MuiSvgIcon-root.MuiSvgIcon-colorError {
 color: var(--dm-danger);
}

/* images */
.inline-image, .image-lg, .image-sq{
  position: relative;
  z-index: 1;
}
.inline-image img{
  max-height: 100%;
  min-width: 100%;
  object-fit: cover;
  vertical-align: middle;
  border-radius: var(--inline-image-image-radius);
  box-shadow: var(--imageElevation);
}
.image-lg img{
  max-height: 100%;
  min-width: 100%;
  object-fit: cover;
  vertical-align: middle;
  border-radius: var(--image-radius);
  box-shadow: var(--image-shadow);
  position: relative;
  z-index: 1;
}
.image-sq img{
  max-height: 100%;
  min-width: 100%;
  object-fit: cover;
  vertical-align: middle;
  border-radius: var(--image-radius);
  box-shadow: var(--image-shadow);
  position: relative;
  z-index: 1;
}

/* dark mode images */
.inline-image::after {
 position: absolute;
 content: '';
 top:0;
 left: 0;
 right:0;
 bottom:0;
 border-radius: var(--inline-image-image-radius);
 background: rgba(0,0,0,.25);
 z-index: 2;
 pointer-events: none;
}
.image-lg img::after, .image-sq img::after{
  position: absolute;
  content: '';
  top:0;
  left: 0;
  right:0;
  bottom:0;
  border-radius: var(--image-radius);
  background: rgba(0,0,0,.25);
  z-index: 2;
  pointer-events: none;
}


.primary-050-bg {
  background: var(--primary-0) !important;
  color: var(--on-primary-0) !important;
  fill: var(--primary-0) !important;
}
.primary-050-bg path{
    fill: var(--on-primary-050) !important;
}

.primary-100-bg {
  background: var(--primary-100)  !important;
  color: var(--on-primary-100) !important;
  fill: var(--primary-100)  !important;
}
.primary-100-bg path{
    fill: var(--on-primary-100) !important;
}

.primary-200-bg {
  background: var(--primary-200)  !important;
  color: var(--on-primary-200) !important;
  fill:var(--primary-200)  !important;
}
.primary-200-bg path{
    fill: var(--on-primary-200) !important;
}
.primary-300-bg {
  background: var(--primary-300)  !important;
  color: var(--on-primary-300) !important;
  fill: var(--primary-300)  !important;
}
.primary-300-bg path{
    fill: var(--on-primary-300) !important;
}
.primary-400-bg {
  background: var(--primary-400)  !important;
  color: var(--on-primary-400) !important;
  fill:  var(--primary-400)  !important;
}
.primary-400-bg path{
    fill: var(--on-primary-400) !important;
}
.primary-500-bg {
  background: var(--primary-500)  !important;
  color: var(--on-primary-500) !important;
  fill: var(--on-primary-500) !important;
}
.primary-500-bg path{
    fill: var(--on-primary-500) !important;
}
.primary-600-bg {
  background: var(--primary-600)  !important;
  color: var(--on-primary-600) !important;
  fill: var(--primary-600)  !important;
}
.primary-600-bg path{
    fill: var(--on-primary-600);
}
.primary-700-bg {
  background: var(--primary-700)  !important;
  color: var(--on-primary-700) !important;
  fill: var(--primary-700)  !important;
}
.primary-700-bg path{
    fill: var(--on-primary-700);
}
.primary-800-bg, .primary-800 {
  background: var(--primary-800)  !important;
  color: var(--white) !important;
  fill: var(--primary-800)  !important;
}
.primary-800-bg path{
    fill: var(--on-primary-800);
}
.primary-900-bg, .primary-900 {
  background: var(--primary-900)  !important;
  color: var(--white) !important;
  fill: var(--primary-900)  !important;
}

.primary-900-bg path{
    fill: var(--on-primary-900);
}
.secondary {
  background: var(--secondary) !important;
  color: var(--on-secondary) !important;
}
.secondary-bg path{
    fill: var(--on-secondary);
}

.secondary-050-bg {
  background: var(--secondary-0)  !important;
  color: var(--on-secondary-0) !important;
}
.secondary-050-bg path{
    fill: var(--on-secondary-050);
}
.secondary-100-bg {
  background: var(--secondary-100)  !important;
  color: var(--on-secondary-100) !important;
}
.secondary-100-bg path{
    fill: var(--on-secondary-100);
}
.secondary-200-bg {
  background: var(--secondary-200)  !important;
  color: var(--on-secondary-200) !important;
}
.secondary-200-bg path{
    fill: var(--on-secondary-200);
}
.secondary-300-bg {
  background: var(--secondary-300)  !important;
  color: var(--on-secondary-300) !important;
}
.secondary-300-bg path{
    fill: var(--on-secondary-300);
}
.secondary-400-bg {
  background: var(--secondary-400)  !important;
  color: var(--on-secondary-400) !important;
}
.secondary-400-bg path{
    fill: var(--on-secondary-400);
}
.secondary400-bg path{
    fill: var(--on-secondary-400) !important;
}
.secondary-500-bg {
  background: var(--secondary-500)  !important;
  color: var(--on-secondary-500) !important;
}
.secondary-500-bg path{
    fill: var(--on-secondary-500);
}
.secondary-600-bg {
  background: var(--secondary-600)  !important;
  color: var(--on-secondary-600) !important;
}
.secondary-600-bg path{
    fill: var(--on-secondary-600);
}
.secondary-700-bg {
  background: var(--secondary-700)  !important;
  color: var(--on-secondary-700) !important;
}
.secondary-700-bg path{
    fill: var(--on-secondary-700);
}
.secondary-800-bg {
  background: var(--secondary-800)  !important;
  color: var(--on-secondary-800) !important;
}
.secondary-800-bg path{
    fill: var(--on-secondary-800);
}
.secondary-900-bg {
  background: var(--secondary-900)  !important;
  color: var(--on-secondary-900) !important;
}
.secondary-900-bg path{
    fill: var(--on-secondary-900);
}
.tertiary {
  background: var(--tertiary) !important;
  color: var(--on-tertiary) !important;
}
.tertiary-bg path{
    fill: var(--on-tertiary);
}

.tertiary-050-bg {
  background: var(--tertiary-0)  !important;
  color: var(--on-tertiary-0);
}
.tertiary-050-bg path{
    fill: var(--on-tertiary-050);
}

.tertiary-100-bg {
  background: var(--tertiary-100)  !important;
  color: var(--on-tertiary-100);
}
.tertiary-100-bg path{
    fill: var(--on-tertiary-100);
}
.tertiary-200-bg {
  background: var(--tertiary-200)  !important;
  color: var(--on-tertiary-200);
}
.tertiary-200-bg path{
    fill: var(--on-tertiary-200);
}
.tertiary-300-bg {
  background: var(--tertiary-300)  !important;
  color: var(--on-tertiary-300);
}
.tertiary-300-bg path{
    fill: var(--on-tertiary-300);
}
.tertiary-400-bg {
  background: var(--tertiary-400)  !important;
  color: var(--on-tertiary-400);
}
.tertiary-400-bg path{
    fill: var(--on-tertiary-400);
}
.tertiary-500-bg {
  background: var(--tertiary-500)  !important;
  color: var(--on-tertiary-500);
}
.tertiary-500-bg path{
    fill: var(--on-tertiary-500);
}
.tertiary-600-bg {
  background: var(--tertiary-600)  !important;
  color: var(--on-tertiary-600);
}
.tertiary-600-bg path{
    fill: var(--on-tertiary-600);
}
.tertiary-700-bg {
  background: var(--tertiary-700)  !important;
  color: var(--on-tertiary-700);
}
.tertiary-700-bg path{
    fill: var(--on-tertiary-700);
}
.tertiary-800-bg {
  background: var(--tertiary-800)  !important;
  color: var(--on-tertiary-800);
}
.tertiary-800-bg path{
    fill: var(--on-tertiary-800);
}
.tertiary-900-bg {
  background: var(--tertiary-900)  !important;
  color: var(--on-tertiary-900);
}
.tertiary-900-bg path{
  fill: var(--on-tertiary-900);
}

.gray {
  background: var(--gray) !important;
  color: var(--on-gray) !important;
}

.gray-050-bg {
  background: var(--gray-0) !important;
  color: var(--on-gray-0);
}
.gray-100-bg {
  background: var(--gray-100) !important;
  color: var(--on-gray-100);
}

.gray-200-bg {
  background: var(--gray-200) !important;
  color: var(--on-gray-200);
}
.gray-300-bg {
  background: var(--gray-300) !important;
  color: var(--on-gray-300);
}
.gray-400-bg {
  background: var(--gray-400) !important;
  color: var(--on-gray-400);
}
.gray-500-bg {
  background: var(--gray-500) !important;
  color: var(--on-gray-500);
}
.gray-600-bg {
  background: var(--gray-600) !important;
  color: var(--on-gray-600);
}
.gray-700-bg {
  background: var(--gray-700) !important;
  color: var(--on-gray-700);
}
.gray-800-bg {
  background: var(--gray-800) !important;
  color: var(--on-gray-800);
}
.gray-900-bg {
  background: var(--gray-900) !important;
  color: var(--on-gray-900);
}

/* States */
.info, .info  .MuiInputBase-input {
  background: var(--info) !important;
  color: var(--on-info) !important;
  fill: rgb(var(--info));
}
.info-text {
  color: var(--info) !important;
}
.success, .success .MuiInputBase-input{
  background: var(--success) !important;
  color: var(--on-success) !important;
  fill: rgb(var(--success)) !important;
}
.success-text {
  color: var(--success) !important;
}
.warning, .warning .MuiInputBase-input{
  background: var(--warning) !important;
  color: var(--on-warning) !important;
  fill: rgb(var(--warning)) !important;
}
.warning-text {
  color: var(--warning) !important;
}
.danger , .danger .MuiInputBase-input{
  background: var(--danger) !important;
  color: var(--on-danger) !important;
  fill: rgb(var(--danger)) !important;
}
.danger-text {
  color: var(--danger) !important;
}

.darkmode .info , .darkmode .info .MuiInputBase-input{
  background: var(--dm-info) !important;
  color: var(--dm-on-info) !important;
  fill: rgb(var(--dm-info)) !important;
}
.darkmode .success, .darkmode .success .MuiInputBase-input {
  background: var(--dm-success) !important;
  color: var(--dm-on-success ) !important;
  fill: rgb(var(--dm-success)) !important;
}
.darkmode .warning, .darkmode .warning .MuiInputBase-input {
  background: var(--dm-warning) !important;
  color: var(--dm-on-warning) !important;
  fill: rgb(var(--dm-warning)) !important;
}
.darkmode .danger, .darkmode .danger .MuiInputBase-input {
  background: var(--dm-danger) !important;
  color: var(--dm-on-danger) !important;
  fill: rgb(var(--dm-danger)) !important;
}

.nearblack-bg {
  background: var(--nearblack) !important;
  color: var(--on-nearblack);
}

.darkmode .nearblack-bg {
  background: var(--nearblack) !important;
  color: var(--dm-on-nearblack);
}

.background {
  background: var(--background) !important;
  color: var(--on-background);
}
/*.background:nth-of-type(even), .background-secondary  {*/
.background-secondary  {
  background: var(--background-secondary) !important;
  color: var(--on-background-secondary);
}

.background-tertiary  {
  background: var(--background-tertiary) !important;
  color: var(--on-background-tertiary);
}

.darkmode .background, .darkmode.background {
  background: var(--dm-background) !important;
  color: var(--dm-on-background);
}

.darkmode .background:nth-of-type(even), .darkmode .background-secondary{
  background: var(--dm-background-secondary) !important;
  color: var(--dm-on-background-secondary);
}

.darkmode .background-tertiary {
  background: var(--dm-background-tertiary) !important;
  color: var(--dm-on-background-tertiary);
}
/* input */
.MuiInputBase-root .MuiOutlinedInput-input {
  border: var(--border-1) solid var(--border) !important;
  border-radius: var(--spacing-half);
  position: relative;
  min-height: calc(var(--button-height) * var(--spacing-1));
}
.MuiInputBase-root {
  position: relative;
}
.MuiInputBase-root .MuiInputBase-input {
  min-height: calc(var(--button-height) * var(--spacing-1)) !important;
  padding: 0 var(--spacing-2);
  display: flex;
  align-items: center;
}
.MuiInputBase-root::after {
  position: absolute;
  content: '';
  top: calc(0px - calc(var(--focusBorder) + 2px + var(--animation-distance) ));
  left: calc(0px - calc(var(--focusBorder) + 2px + var(--animation-distance) ));
  right: calc(0px - calc(var(--focusBorder) + 2px + var(--animation-distance)));
  bottom: calc(0px - calc(var(--focusBorder) + 2px + var(--animation-distance)));
  border: var(--focusBorder) solid var(--button);
  border-radius: calc(var(--spacing-half) + 1.6px);
  z-index: 2;
  pointer-events: none;
  opacity: 0;
  transition: var(--animation-speed) cubic-bezier(0.68, -0.55, 0.265, 1.55) all;
}
.MuiOutlinedInput-root:hover::after {
  position: absolute;
  top: calc(0px - calc(var(--focusBorder) + 1px )) !important;
  left: calc(0px - calc(var(--focusBorder) + 1px )) !important;;
  right: calc(0px - calc(var(--focusBorder) + 1px )) !important;;
  bottom: calc(0px - calc(var(--focusBorder) + 1px )) !important;;
  opacity: .5;
}
.MuiOutlinedInput-root:focus::after {
  position: absolute;
  top: calc(0px - calc(var(--focusBorder) + 1px )) !important;
  left: calc(0px - calc(var(--focusBorder) + 1px )) !important;;
  right: calc(0px - calc(var(--focusBorder) + 1px )) !important;;
  bottom: calc(0px - calc(var(--focusBorder) + 1px )) !important;;
  opacity: 1;
}
.MuiInputBase-root {
  min-height: var(--min-target);
}

.MuiFormControl-root:not(.info):not(.success):not(.warning):not(.danger):not(hexValue)  .MuiOutlinedInput-root {
  color: var(--on-input);
  background: var(--input);
}
.hexValue .MuiOutlinedInput-root {
  background: none !important;
}
/* input error */
.MuiFormHelperText-root.Mui-error {
  color: var(--danger) !important;
}
.MuiOutlinedInput-root.Mui-error .MuiInputBase-input{
  border: calc(var(--button-border) * var(--border-1)) solid var(--danger) !important;
}
/* Modal */
.overlay {
  background: var(--modal-overlay);
  opacity: .5
}
.modal {
  height: auto;
  box-shadow: var(--modal-shadow);
  border-radius: calc(var(--modal-radius) * var(--radius-1));
  padding: var(--spacing-3);
  background: var(--surface);
}
.modal-content {
  padding: var(--spacing-3);
  display: flex;
  flex-direction: column;
}

.modal-footer {
  padding: var(--spacing-3) 0;
  gap: var(--spacing-2);
  display: flex;;
  justify-content: start;
}
/* elevations */
.elevation-1 {
  box-shadow: var(--elevation-1) !important;
  -webkit-box-shadow: var(--elevation-1) !important;
  -moz-box-shadow: var(--elevation-1) !important;
}
.elevation-2 {
  box-shadow: var(--elevation-2) !important;
  -webkit-box-shadow: var(--elevation-2) !important;
  -moz-box-shadow: var(--elevation-2) !important;
}
.elevation-3 {
  box-shadow: var(--elevation-3) !important;
  -webkit-box-shadow: var(--elevation-3) !important;
  -moz-box-shadow: var(--elevation-3) !important;
}
.elevation-4 {
  box-shadow: var(--elevation-4) !important;
  -webkit-box-shadow: var(--elevation-4) !important;
  -moz-box-shadow: var(--elevation-4) !important;
}
.elevation-5 {
  box-shadow: var(--elevation-5) !important;
  -webkit-box-shadow: var(--elevation-5) !important;
  -moz-box-shadow: var(--elevation-5) !important;
}
.elevation-6 {
  box-shadow: var(--elevation-6) !important;
  -webkit-box-shadow: var(--elevation-6) !important;
  -moz-box-shadow: var(--elevation-6) !important;
}
.elevation-7 {
  box-shadow: var(--elevation-7) !important;
  -webkit-box-shadow: var(--elevation-7) !important;
  -moz-box-shadow: var(--elevation-7) !important;
}
.elevation-8 {
  box-shadow: var(--elevation-8) !important;
  -webkit-box-shadow: var(--elevation-8) !important;
  -moz-box-shadow: var(--elevation-8) !important;
}
.elevation-9 {
  box-shadow: var(--elevation-9) !important;
  -webkit-box-shadow: var(--elevation-9) !important;
  -moz-box-shadow: var(--elevation-9) !important;
}
.darkmode .elevation-0 {
  background: var(--elevation-bg-0) !important;
  box-shadow: none  !important;
  border: var(--border-1) solid var(--dm-border);
  color: var(--dm-white);
}
.darkmode .elevation-1 {
  background: var(--elevation-bg-1) !important;
    box-shadow: none  !important;
  border: var(--border-1) solid var(--dm-border);
}
.darkmode .elevation-2 {
  background: var(--elevation-bg-2) !important;
    box-shadow: none  !important;
  border: var(--border-1) solid var(--dm-border);
  color: var(--dm-white);
}
.darkmode .elevation-3 {
  background: var(--elevation-bg-3) !important;
    box-shadow: none  !important;
  border: var(--border-1) solid var(--dm-border);
  color: var(--dm-white);
}
.darkmode .elevation-4 {
  background: var(--elevation-bg-4) !important;
    box-shadow: none  !important;
  border: var(--border-1) solid var(--dm-border);
  color: var(--dm-white);
}
.darkmode .elevation-5 {
  background: var(--elevation-bg-5) !important;
    box-shadow: none  !important;
  border: var(--border-1) solid var(--dm-border);
  color: var(--dm-white);
}
.darkmode .elevation-6 {
  background: var(--elevation-bg-5) !important;
    box-shadow: none  !important;
  border: var(--border-1) solid var(--dm-border);
  color: var(--dm-white);
}
.darkmode .elevation-7 {
  background: var(--elevation-bg-7) !important;
    box-shadow: none  !important;
  border: var(--border-1) solid var(--dm-border);
  color: var(--dm-white);
}
.darkmode .elevation-8 {
  background: var(--elevation-bg-8) !important;
    box-shadow: none  !important;
  border: var(--border-1) solid var(--dm-border);
  color: var(--dm-white);
}
.darkmode .elevation-9 {
  background: var(--elevation-bg-9) !important;
    box-shadow: none  !important;
  border: var(--border-1) solid var(--dm-border);
  color: var(--dm-white);
}
/* bevels */
.bevel {
  border: none !important;
}
.bevel-0 {
  box-shadow: 0 0 0 0 rgb(0,0,0)
}
.bevel-1 {
  box-shadow: var(--bevel-1) !important;
  -webkit-box-shadow:var(--bevel-1) !important;
  -moz-box-shadow: var(--bevel-1) !important;
}
.bevel-2 {
  box-shadow: var(--bevel-2) !important;
  -webkit-box-shadow:var(--bevel-2) !important;
  -moz-box-shadow: var(--bevel-2) !important;
}
.bevel-3 {
  box-shadow: var(--bevel-3) !important;
  -webkit-box-shadow:var(--bevel-3) !important;
  -moz-box-shadow: var(--bevel-3) !important;
}
.bevel-4 {
  box-shadow: var(--bevel-4) !important;
  -webkit-box-shadow:var(--bevel-4) !important;
  -moz-box-shadow: var(--bevel-4) !important;
}
.bevel-5 {
  box-shadow: var(--bevel-5) !important;
  -webkit-box-shadow:var(--bevel-5) !important;
  -moz-box-shadow: var(--bevel-5) !important;
}
.bevel-6 {
  box-shadow: var(--bevel-6) !important;
  -webkit-box-shadow:var(--bevel-6) !important;
  -moz-box-shadow: var(--bevel-6) !important;
}
.bevel-7 {
  box-shadow: var(--bevel-7) !important;
  -webkit-box-shadow:var(--bevel-7) !important;
  -moz-box-shadow: var(--bevel-7) !important;
}
.bevel-8 {
  box-shadow: var(--bevel-8) !important;
  -webkit-box-shadow:var(--bevel-8) !important;
  -moz-box-shadow: var(--bevel-8) !important;
}
.bevel-9 {
  box-shadow: var(--bevel-9) !important;
  -webkit-box-shadow:var(--bevel-9) !important;
  -moz-box-shadow: var(--bevel-9) !important;
}
/* inverse bevels */
.bevel-1-inverse {
  box-shadow: var(--reverse-bevel-1) !important;
  -webkit-box-shadow:var(--reverse-bevel-1) !important;
  -moz-box-shadow: var(--reverse-bevel-1) !important;
}
.bevel-2-inverse {
  box-shadow: var(--reverse-bevel-2) !important;
  -webkit-box-shadow:var(--reverse-bevel-2) !important;
  -moz-box-shadow: var(--reverse-bevel-2) !important;
}
.bevel-3-inverse {
  box-shadow: var(--reverse-bevel-3) !important;
  -webkit-box-shadow:var(--reverse-bevel-3) !important;
  -moz-box-shadow: var(--reverse-bevel-3) !important;
}
.bevel-4-inverse {
  box-shadow: var(--reverse-bevel-4) !important;
  -webkit-box-shadow:var(--reverse-bevel-4) !important;
  -moz-box-shadow: var(--reverse-bevel-4) !important;
}
.bevel-5-inverse {
  box-shadow: var(--reverse-bevel-5) !important;
  -webkit-box-shadow:var(--reverse-bevel-5) !important;
  -moz-box-shadow: var(--reverse-bevel-5) !important;
}
.bevel-6-inverse {
  box-shadow: var(--reverse-bevel-6) !important;
  -webkit-box-shadow:var(--reverse-bevel-6) !important;
  -moz-box-shadow: var(--reverse-bevel-6) !important;
}
.bevel-7-inverse {
  box-shadow: var(--reverse-bevel-7) !important;
  -webkit-box-shadow:var(--reverse-bevel-7) !important;
  -moz-box-shadow: var(--reverse-bevel-7) !important;
}
.bevel-8-inverse {
  box-shadow: var(--reverse-bevel-8) !important;
  -webkit-box-shadow:var(--reverse-bevel-8) !important;
  -moz-box-shadow: var(--reverse-bevel-8) !important;
}
.bevel-9-inverse {
  box-shadow: var(--reverse-bevel-9) !important;
  -webkit-box-shadow:var(--reverse-bevel-9) !important;
  -moz-box-shadow: var(--reverse-bevel-9) !important;
}
/* VARYING BACKGROUND COLORS */
/*  BLACK  */
.black:not(.breadcrumbs), .black-bg:not(.breadcrumbs) {
    background: var(--black) !important;
    color: var(--white) !important;
}
.black-half {
  background: var(--black-half) !important;
}
.black .fa-regular:not(button *), .black .fa-solid:not(button *) {
  color: var(--iconOnBlack) !important;
}
/* hotlinks &  breadcrumbs */
.MuiBreadcrumbs-li p {
  padding-bottom: 0 !important;
}
.black a,
.black .breadcrumbs .MuiBreadcrumbs-li a,
.black .breadcrumbs .MuiBreadcrumbs-li:focus a,
.black .breadcrumbs .MuiBreadcrumbs-li:active a {
  text-decoration:  var(--hotlinkOnBlack-decoration);
  color: var(--hotlinkOnBlack);
}
.black a:visited,
.black.breadcrumbs .MuiBreadcrumbs-li a:visited {
  text-decoration:  var(--hotlinkOnBlack-decoration) !important;
  color: var(--hotlinkOnBlack);
  opacity: .7
}
.black a:hover,
.black .breadcrumbs .MuiBreadcrumbs-li a:hover {
  text-decoration: var(--hotlinkOnBlack-hover-decoration) !important;
}
.black a:active,
.black .breadcrumbs .MuiBreadcrumbs-li a:active  {
  text-decoration: var(--hotlinkOnBlack-hover-decoration)
}
.black .MuiBreadcrumbs-root,
.black .breadcrumbs:not(.back-breadcrumbs) .MuiBreadcrumbs-li:last-of-type .MuiTypography-root {
  color: var(--white);
  opacity: var(--quiet);
}
/* on black buttons */
.black button:not(.MuiTab-root):not(.black):not(.small-btn):not(.MuiButton-outlined):not(.MuiButton-text) {
  background: var(--buttonOnBlack) !important;
  color: var(--onbuttonOnBlack) !important;
}
.black button:not(.black).MuiButton-outlined::before, .black button::not(.MuiTab-root):not(.black).MuiButton-outlined::before  {
  border: calc(var(--border-1) * var(--button-border)) solid var(--buttonOnBlack) !important;
}
.black button.small-btn:not(.MuiButton-outlined):not(.MuiButton-text)::before {
  color: var(--onbuttonOnBlack) !important;
  background: var(--buttonOnBlack) !important;
}
.black button.small-btn.MuiButton-outlined {
  color: var(--onbuttonOnBlack) !important;
  background: none !important
}
.black button:not(.black).MuiButton-outlined, .black button:not(.black).MuiButton-text {
  color: var(--buttonOnBlack) !important;
}
.black button:not(.MuiTab-root):not(.black)::after {
  border: var(--focusBorder) solid var(--buttonOnBlack);
}
.black .MuiAvatar-root:not(.black) {
  background-color: var(--buttonOnBlack)
}
.black .MuiAvatar-root:not(.black) svg path {
    fill: var(--on-buttonOnBlack);
}

/* black group buttons */
.black button.MuiButton-outlined::before {
  border: calc(var(--border-1) * var(--button-border)) solid var(--white);
}
.black button.MuiButton-outlined::after,
.black button.MuiButton-text::after {
  background: var(--white);
}
/* black divider */
.black .MuiDivider-root, .MuiDivider-root:not(.black){
  border-color: var(--white);
}
.darkmode .black .MuiList-root .MuiDivider-root:not(.black) {
  border-color: var(--dm-white);
}
/* colored rootbase after */
.black .MuiInputBase-root::after {
  border: var(--focusBorder) solid var(--buttonOnBlack);
}
.darkmode .black .MuiInputBase-root::after {
  border: var(--focusBorder) solid var(--dmbuttonOnBlack);
}

/*  WHITE  */
.white:not(.breadcrumbs), .white-bg {
    background: var(--white) !important;
    color: var(--black) !important;
}
.white-half {
  background: var(--white-half) !important;
}
.white .fa-regular:not(button *), .white .fa-solid:not(button *) {
  color: var(--iconOnWhite) !important;
}
/* hotlinks &  breadcrumbs */
.white a,
.white .breadcrumbs .MuiBreadcrumbs-li a,
.white .breadcrumbs .MuiBreadcrumbs-li:focus a,
.white .breadcrumbs .MuiBreadcrumbs-li:active a {
  text-decoration:  var(--hotlinkOnWhite-decoration);
  color: var(--hotlinkOnWhite);
}
.white a:visited,
.white .breadcrumbs .MuiBreadcrumbs-li a:visited {
  text-decoration:  var(--hotlinkOnWhite-decoration) !important;
  color: var(--hotlinkOnWhite);
  opacity: .5
}
.white a:hover,
.white .breadcrumbs .MuiBreadcrumbs-li a:hover {
  text-decoration: var(--hotlinkOnWhite-hover-decoration) !important;
}
.white a:active,
.white .breadcrumbs .MuiBreadcrumbs-li a:active  {
  text-decoration: var(--hotlinkOnWhite-hover-decoration)
}
.white .MuiBreadcrumbs-root,
.white .breadcrumbs:not(.back-breadcrumbs) .MuiBreadcrumbs-li:last-of-type .MuiTypography-root {
  color: var(--black);
  opacity: var(--quiet);
}
/* on white buttons */
.white button:not(.MuiTab-root):not(.white):not(.small-btn):not(.MuiButton-outlined):not(.MuiButton-text) {
  background: var(--buttonOnWhite) !important;
  color: var(--onbuttonOnWhite) !important;
}
.white button::not(.MuiTab-root):not(.white).MuiButton-outlined::before {
  border: calc(var(--border-1) * var(--button-border)) solid var(--buttonOnWhite) !important;
}
.white button.small-btn.MuiButton-outlined  {
  color: var(--onbuttonOnWhite) !important;
  background: none !important
}
.white button.small-btn:not(.MuiButton-outlined):not(.MuiButton-text)::before {
  color: var(--onbuttonOnWhite) !important;
  background: var(--buttonOnWhite) !important;
}
.white button:not(.white).MuiButton-outlined, .white button:not(.white).MuiButton-text {
  color: var(--buttonOnWhite) !important;
}
.white button:not(.MuiTab-root):not(.white)::after{
  border: var(--focusBorder) solid var(--buttonOnWhite);
}

/* white group buttons */
.white button.MuiButton-outlined::before {
  border: calc(var(--border-1) * var(--button-border)) solid var(--black);
}
.white button.MuiButton-outlined::after,
.white button.MuiButton-text::after {
  background: var(--black);
}
.white .MuiAvatar-root:not(.white) {
  background-color: var(--buttonOnBlack)
}
.darkmode .white .MuiAvatar-root:not(.white) svg path {
    fill: var(--on-buttonOnBlack);
}
/* white divider */
.white .MuiDivider-root, .MuiDivider-root:not(.white),.white .MuiList-root .MuiDivider-root:not(.white) {
  border-color: var(--black);
}
/* colored rootbase after */
.white .MuiInputBase-root::after, .darkmode .white .MuiInputBase-root::after {
  border: var(--focusBorder) solid var(--buttonOnBlack);
}
/*  COLORED, PRIMARY, TERTIARY_BG */
.colored, .backgroundTertiary {
  background: var(--background-tertiary) !important;
  color: var(--on-background-tertiary) !important;
}
/* hotlinks &  breadcrumbs */
.colored a,
.colored.breadcrumbs .MuiBreadcrumbs-li a,
.colored .breadcrumbs .MuiBreadcrumbs-li:focus a,
.colored .breadcrumbs .MuiBreadcrumbs-li:active a {
  text-decoration:  underline !important;
  color: var(--hotlinkOnTertiary) !important;
}
.colored a:visited,
.colored .breadcrumbs .MuiBreadcrumbs-li a:visited {
  text-decoration: underline !important;
  color: var(--hotlinkOnTertiary) !important;
  opacity: .7
}
.colored a:hover,
.colored .breadcrumbs .MuiBreadcrumbs-li a:hover {
  text-decoration: none !important;
}
.colored a:active,
.colored .breadcrumbs .MuiBreadcrumbs-li a:active  {
  text-decoration: none!important;
}
.colored .MuiBreadcrumbs-root,
.colored .breadcrumbs:not(.back-breadcrumbs) .MuiBreadcrumbs-li:last-of-type .MuiTypography-root {
  color: var(--on-background-tertiary);
  opacity: var(--quiet);
}
/* buttons */
.colored button:not(.MuiTab-root):not(.small-btn):not(.MuiButton-outlined):not(.MuiButton-text), .backgroundTertiary button:not(.MuiTab-root):not(.small-btn):not(.MuiButton-outlined):not(.MuiButton-text)  {
  background: var(--buttonOnTertiary) !important;
  color: var(--onbuttonOnTertiary) !important;
}
.colored button:not(.MuiTab-root).MuiButton-outlined::before, .backgroundTertiary button:not(.MuiTab-root).MuiButton-outlined::before  {
  border: calc(var(--border-1) * var(--button-border)) solid var(--buttonOnTertiary) !important;
}
.colored button.small-btn:not(.MuiButton-outlined):not(.MuiButton-text), .backgroundTertiary button.small-btn:not(.MuiButton-outlined):not(.MuiButton-text)  {
  color: var(--onbuttonOnTertiary) !important;
}
.colored button.small-btn.MuiButton-outlined, .backgroundTertiary button.small-btn.MuiButton-outlined  {
  color: var(--buttonOnTertiary) !important;
  background: none !important
}
.colored button.small-btn:not(.MuiButton-outlined):not(.MuiButton-text)::before, .backgroundTertiary button.small-btn:not(.MuiButton-outlined):not(.MuiButton-text)::before {
  color: var(--onbuttonOnTertiary) !important;
  background: var(--buttonOnTertiary) !important;
}
.colored button.MuiButton-outlined, .colored button.MuiButton-text, .backgroundTertiary button.MuiButton-outlined, .backgroundTertiary button.MuiButton-text  {
  color: var(--buttonOnTertiary) !important;
}
.colored button:not(.MuiTab-root)::after,.colored .backgroundTertiary button:not(.MuiTab-root)::after {
  border: var(--focusBorder) solid var(--buttonOnTertiary);
}
/* avatars */
.colored .MuiAvatar-root:not(.white) {
  background-color: var(--buttonOnTertiary)
}
.colored .MuiAvatar-root:not(.white) svg path {
    fill: var(--on-buttonOnTertiary);
}
/* colores divider */
.colored .MuiDivider-root, .MuiDivider-root:not(.black){
  border-color: var(--on-background-tertiary);
}
.darkmode .colored .MuiList-root .MuiDivider-root:not(.black) {
  border-color: var(--dm-on-background-tertiary);
}
/* colored rootbase after */
.colored .MuiInputBase-root::after {
  border: var(--focusBorder) solid var(--on-background-tertiary);
}
.darkmode .colored .MuiInputBase-root::after {
  border: var(--focusBorder) solid var(--dm-on-background-tertiary);
}

/*  GRADIENT 1 */
.gradient-1 {
  background: var(--gradient-1) !important;
  color: var(--on-gradient-1) !important;
}
.gradient-1 .fa-regular:not(button *), .gradient-1 .fa-solid:not(button *) {
  color: var(--on-gradient-1) !important;
}
/* on white hotlinks */
.gradient-1 a,
.gradient-1 .breadcrumbs .MuiBreadcrumbs-li a,
.gradient-1 .breadcrumbs .MuiBreadcrumbs-li:focus a,
.gradient-1 .breadcrumbs .MuiBreadcrumbs-li:active a {
  text-decoration: underline !important;
  color: var(--on-gradient-1) !important;
}
.gradient-1 a:visited,
.gradient-1 .breadcrumbs .MuiBreadcrumbs-li a:visited {
  text-decoration: underline !important;
  color: var(--on-gradient-1) !important;
}
.gradient-1 a:hover,
.gradient-1 .breadcrumbs .MuiBreadcrumbs-li a:hover {
  text-decoration: none !important;
}
.gradient-1 a:active,
.gradient-1 .breadcrumbs .MuiBreadcrumbs-li a:active  {
  text-decoration: underline;
}
.gradient-1  .MuiBreadcrumbs-root,
.gradient-1 .breadcrumbs:not(.back-breadcrumbs) .MuiBreadcrumbs-li:last-of-type .MuiTypography-root {
  color: var(---on-gradient-1);
  opacity: var(--quiet);
}
/* avatars */
.gradient-1 .MuiAvatar-root {
  background-color: var(--buttonOnGradient1)
}
.gradient-1  .MuiAvatar-root svg path {
    fill: var(--onbuttonOnGradient1);
}
/* on white buttons */
.gradient-1 button:not(.MuiTab-root):not(.white):not(.small-btn):not(.MuiButton-outlined):not(.MuiButton-text) {
  background: var(--buttonOnGradient1) !important;
  color: var(--onbuttonOnGradient1) !important;
}
.gradient-1 button::not(.MuiTab-root):not(.white).MuiButton-outlined::before {
  border: calc(var(--border-1) * var(--button-border)) solid var(--buttonOnGradient1) !important;
}
.gradient-1 button.small-btn.MuiButton-outlined {
  color: var(--onbuttonOnGradient1) !important;
  background: none !important
}
.gradient-1 button.small-btn:not(.MuiButton-outlined):not(.MuiButton-text)::before {
  color: var(--onbuttonOnGradient1) !important;
  background: var(--buttonOnGradient1) !important;
}
.gradient-1 button:not(.white).MuiButton-outlined, .gradient-1 button:not(.white).MuiButton-text {
  color: var(--buttonOnGradient1) !important;
}
.gradient-1 button:not(.MuiTab-root):not(.white)::after{
  border: var(--focusBorder) solid var(--buttonOnGradient1);
}
/* gradeint 1 divider */
.gradient-1 .MuiDivider-root, .MuiDivider-root{
  border-color: var(--on-gradeint-1);
}
.darkmode .gradient-1 .MuiList-root .MuiDivider-root.black {
  border-color: var(--dm-on-gradient-1);
}
/* gradient rootbase after */
.gradient-1 .MuiInputBase-root::after {
  border: var(--focusBorder) solid var(--on-gradient-1);
}
.darkmode .gradient-1 .MuiInputBase-root::after {
  border: var(--focusBorder) solid var(--dm-on-gradient-1);
}

/*  GRADIENT 2 */
.gradient-2 {
  background: var(--gradient-2) !important;
  color: var(--on-gradient-2) !important;
}
.gradient-2 .fa-regular:not(button *), .gradient-2 .fa-solid:not(button *) {
  color: var(--on-gradient-2) !important;
}

/* hotlinks &  breadcrumbs */
.gradient-2 a,
.gradient-2 .breadcrumbs .MuiBreadcrumbs-li a,
.gradient-2 .breadcrumbs .MuiBreadcrumbs-li:focus a,
.gradient-2 .breadcrumbs .MuiBreadcrumbs-li:active a {
  text-decoration: underline !important;
  color: var(--on-gradient-2) !important;
}
.gradient-2 a:visited,
.gradient-2 .breadcrumbs .MuiBreadcrumbs-li a:visited {
  text-decoration: underline !important;
  color: var(--on-gradient-2) !important;
}
.gradient-2 a:hover,
.gradient-2 .breadcrumbs .MuiBreadcrumbs-li a:hover {
  text-decoration: none !important;
}
.gradient-2 a:active,
.gradient-2 .breadcrumbs .MuiBreadcrumbs-li a:active  {
  text-decoration: underline;
}
.gradient-2  .MuiBreadcrumbs-root,
.gradient-2 .breadcrumbs:not(.back-breadcrumbs) .MuiBreadcrumbs-li:last-of-type .MuiTypography-root {
  color: var(---on-gradient-2);
  opacity: var(--quiet);
}
/* avatars */
.gradient-2 .MuiAvatar-root {
  background-color: var(--buttonOnGradient2)
}
.gradient-2  .MuiAvatar-root svg path {
    fill: var(--onbuttonOnGradient2);
}
/*  buttons */
.gradient-2 button:not(.MuiTab-root):not(.white):not(.small-btn):not(.MuiButton-outlined):not(.MuiButton-text)  {
  background: var(--buttonOnGradient2) !important;
  color: var(--onbuttonOnGradient2) !important;
}
.gradient-2 button::not(.MuiTab-root):not(.white).MuiButton-outlined::before  {
  border: calc(var(--border-1) * var(--button-border)) solid var(--buttonOnGradient2) !important;
}
.gradient-2 button.small-btn.MuiButton-outlined {
  color: var(--onbuttonOnGradient2) !important;
  background: none !important
}
.gradient-2 button.small-btn:not(.MuiButton-outlined):not(.MuiButton-text)::before {
  color: var(--onbuttonOnGradient2) !important;
  background: var(--buttonOnGradient2) !important;
}
.gradient-2 button:not(.white).MuiButton-outlined, .gradient-2 button:not(.white).MuiButton-text  {
  color: var(--buttonOnGradient2) !important;
}
.gradient-2 button:not(.MuiTab-root):not(.white)::after {
  border: var(--focusBorder) solid var(--buttonOnGradient2);
}
/* gradeint 2 divider */
.gradient-2 .MuiDivider-root, .MuiDivider-root{
  border-color: var(--on-gradeint-2);
}
.darkmode .gradient-2 .MuiList-root .MuiDivider-root.black {
  border-color: var(--dm-on-gradient-2);
}
/*  GRADIENT 3 */
.gradient-3 {
  background: var(--gradient-3) !important;
  color: var(--on-gradient-3) !important;
}
.gradient-3 .fa-regular:not(button *), .gradient-3 .fa-solid:not(button *) {
  color: var(--on-gradient-3) !important;
}
/* hotlinks &  breadcrumbs */
.gradient-3 a,
.gradient-3 .breadcrumbs .MuiBreadcrumbs-li a,
.gradient-3 .breadcrumbs .MuiBreadcrumbs-li:focus a,
.gradient-3 .breadcrumbs .MuiBreadcrumbs-li:active a {
  text-decoration: underline !important;
  color: var(--on-gradient-3) !important;
}
.gradient-3 a:visited,
.gradient-3 .breadcrumbs .MuiBreadcrumbs-li a:visited {
  text-decoration: underline !important;
  color: var(--on-gradient-3) !important;
}
.gradient-3 a:hover,
.gradient-3 .breadcrumbs .MuiBreadcrumbs-li a:hover {
  text-decoration: none !important;
}
.gradient-3 a:active,
.gradient-3 .breadcrumbs .MuiBreadcrumbs-li a:active  {
  text-decoration: underline;
}
.gradient-3  .MuiBreadcrumbs-root,
.gradient-3 .breadcrumbs:not(.back-breadcrumbs) .MuiBreadcrumbs-li:last-of-type .MuiTypography-root {
  color: var(---on-gradient-3);
  opacity: var(--quiet);
}
/* avatars */
.gradient-3 .MuiAvatar-root {
  background-color: var(--buttonOnGradient3)
}
.gradient-3  .MuiAvatar-root svg path {
    fill: var(--onbuttonOnGradient3);
}
/* buttons */
.gradient-3 button:not(.MuiTab-root):not(.white):not(.small-btn):not(.MuiButton-outlined):not(.MuiButton-text)  {
  background: var(--buttonOnGradient3) !important;
  color: var(--onbuttonOnGradient3) !important;
}
.gradient-3 button::not(.MuiTab-root):not(.white).MuiButton-outlined::before {
  border: calc(var(--border-1) * var(--button-border)) solid var(--buttonOnGradient3) !important;
}
.gradient-3 button.small-btn.MuiButton-outlined, .white .backgroundTertiary button.small-btn.MuiButton-outlined  {
  color: var(--onbuttonOnGradient3) !important;
  background: none !important
}
.gradient-3 button.small-btn:not(.MuiButton-outlined):not(.MuiButton-text)::before {
  color: var(--onbuttonOnGradient3) !important;
  background: var(--buttonOnGradient3) !important;
}
.gradient-3 button:not(.white).MuiButton-outlined, .gradient-3 button:not(.white).MuiButton-text {
  color: var(--buttonOnGradient3) !important;
}
.gradient-3 button:not(.MuiTab-root):not(.white)::after {
  border: var(--focusBorder) solid var(--buttonOnGradient3);
}
.gradient-3 .MuiAvatar-root {
  background-color: var(--buttonOnGradient3)
}
.gradient-3  .MuiAvatar-root svg path {
    fill: var(--onbuttonOnGradient3);
}
/* gradeint 3 divider */
.gradient-3 .MuiDivider-root, .MuiDivider-root{
  border-color: var(--on-gradeint-3);
}
.darkmode .gradient-3 .MuiList-root .MuiDivider-root.black {
  border-color: var(--dm-on-gradient-3);
}
/*  Darkmode BLACK  */
.darkmode .black:not(.breadcrumbs) {
    background: var(--black) !important;
    color: var(--dm-white) !important;
}
.darkmode .black .fa-regular:not(button *), .black .fa-solid:not(button *) {
  color: var(--dmiconOnBlack) !important;
}
/* on black hotlinks */
.darkmode .black a {
  text-decoration:  var(--hotlinkOnBlack-decoration);
  color: var(--hotlinkOnBlack);
}
.darkmode .black a:visited {
  text-decoration:  var(--hotlinkOnBlack-decoration) !important;
  color: var(--hotlinkOnBlack);
  opacity: .7
}
.darkmode .black a:hover {
  text-decoration: var(--hotlinkOnBlack-hover-decoration) !important;
}
.darkmode .black a:active {
  text-decoration: var(--hotlinkOnBlack-hover-decoration)
}
/* on black buttons */
.darkmode .black button:not(.MuiTab-root):not(.black):not(.small-btn):not(.MuiButton-outlined):not(.MuiButton-text) {
  background: var(--dmbuttonOnBlack) !important;
  color: var(--dmonbuttonOnBlack) !important;
}
.darkmode .black button:not(.black).MuiButton-outlined::before, .black button::not(.MuiTab-root):not(.black).MuiButton-outlined::before  {
  border: calc(var(--border-1) * var(--button-border)) solid var(--dmbuttonOnBlack) !important;
}
.darkmode .black button.small-btn:not(.MuiButton-outlined):not(.MuiButton-text)::before {
  color: var(--dmonbuttonOnBlack) !important;
  background: var(--dmbuttonOnBlack) !important;
}
.darkmode .black button.small-btn.MuiButton-outlined {
  color: var(--dmonbuttonOnBlack) !important;
  background: none !important
}
.darkmode .black button:not(.black).MuiButton-outlined, .black button:not(.black).MuiButton-text {
  color: var(--dmbuttonOnBlack) !important;
}
.darkmode .black button:not(.MuiTab-root):not(.black)::after {
  border: var(--focusBorder) solid var(--dmbuttonOnBlack);
}
/* black group buttons */
.darkmode .black button.MuiButton-outlined::before {
  border: calc(var(--border-1) * var(--button-border)) solid var(--dm-white);
}
.darkmode .black button.MuiButton-outlined::after,
.darkmode .black button.MuiButton-text::after {
  background: var(--dm-white);
}
.darkmode .black .MuiAvatar-root:not(.black) {
  background-color: var(--dmbuttonOnBlack)
}
.darkmode .black .MuiAvatar-root:not(.black) svg path {
    fill: var(--dmonbuttonOnBlack);
}
/* dark mode white */
.darkmode .white:not(.breadcrumbs), .white-bg {
    background: var(--dm-white) !important;
    color: var(--black) !important;
}
.darkmode .white-half {
  background: var(--dm-white-half) !important;
}
.darkmode .white .fa-regular:not(button *), .white .fa-solid:not(button *) {
  color: var(--dmiconOnWhite) !important;
}
/* on white hotlinks */
.darkmode .white a {
  text-decoration:  underline;
  color: var(--dmhotlinkOnWhite);
}
.darkmode .white a:visited{
  text-decoration:  underline !important;
  color: var(--dmhotlinkOnWhite);
  opacity: .5
}
.darkmode .white a:hover {
  text-decoration: none !important;
}
.darkmode .white a:active {
  text-decoration: underline;
}
/* on white buttons */
.darkmode .white button:not(.MuiTab-root):not(.white):not(.small-btn):not(.MuiButton-outlined):not(.MuiButton-text) {
  background: var(--dmbuttonOnWhite) !important;
  color: var(--dmonbuttonOnWhite) !important;
}
.darkmode .white button::not(.MuiTab-root):not(.white).MuiButton-outlined::before {
  border: calc(var(--border-1) * var(--button-border)) solid var(--dmbuttonOnWhite) !important;
}
.darkmode .white button.small-btn.MuiButton-outlined  {
  color: var(--dmonbuttonOnWhite) !important;
  background: none !important
}
.darkmode .white button.small-btn:not(.MuiButton-outlined):not(.MuiButton-text)::before {
  color: var(--dmonbuttonOnWhite) !important;
  background: var(--dmbuttonOnWhite) !important;
}
.darkmode .white button:not(.white).MuiButton-outlined, .white button:not(.white).MuiButton-text {
  color: var(--dmbuttonOnWhite) !important;
}
.darkmode .white button:not(.MuiTab-root):not(.white)::after{
  border: var(--focusBorder) solid var(--dmbuttonOnWhite);
}
/* white group buttons */
.darkmode .white button.MuiButton-outlined::before {
  border: calc(var(--border-1) * var(--button-border)) solid var(--black);
}
.darkmode .white button.MuiButton-outlined::after,
.darkmode .white button.MuiButton-text::after {
  background: var(--black);
}
.darkmode .white .MuiAvatar-root:not(.white) {
  background-color: var(--dmbuttonOnBlack)
}
.darkmode .white .MuiAvatar-root:not(.white) svg path {
    fill: var(--dmbonuttonOnBlack)
}
